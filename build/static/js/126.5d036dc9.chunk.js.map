{"version":3,"sources":["components/PageTitle.js","pages/uikit/Accordions.js"],"names":["PageTitle","props","className","Item","href","breadCrumbItems","map","item","index","active","label","path","title","SimpleAccordions","useState","open","setOpen","Header","to","onClick","prevState","in","Body","CustomAccordions","classNames","collapsed","appear","Accordions","isOpen","setIsOpen","isOpenFirst","setIsOpenFirst","isOpenSecond","setIsOpenSecond","toggle","Fragment","xl","color","type","variant"],"mappings":"oHACA,2CA8CeA,IA7BG,SAACC,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAYA,UAAU,MAAtB,UACI,cAAC,IAAWC,KAAZ,CAAiBC,KAAK,IAAtB,mBAECH,EAAMI,gBAAgBC,KAAI,SAACC,EAAMC,GAC9B,OAAOD,EAAKE,OACR,cAAC,IAAWN,KAAZ,CAAiBM,QAAM,EAAvB,SACKF,EAAKG,OADmBF,GAI7B,cAAC,IAAWL,KAAZ,CAA6BC,KAAMG,EAAKI,KAAxC,SACKJ,EAAKG,OADYF,WAOtC,oBAAIN,UAAU,aAAd,SAA4BD,EAAMW,iB,0JC/BhDC,EAAmB,SAAC,GAAc,IAAZN,EAAW,EAAXA,KACxB,EAAwBO,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,mCACI,eAAC,IAAD,CAAMd,UAAU,OAAhB,UACI,cAAC,IAAKe,OAAN,UACI,oBAAIf,UAAU,MAAd,SACI,eAAC,IAAD,CACIgB,GAAG,IACHhB,UAAU,2CACViB,QAZT,WACXH,GAAQ,SAACI,GAAD,OAAgBA,MAYJ,gBAAe,WAAab,EAC5B,gBAAeQ,EALnB,qCAM6BR,SAKrC,cAAC,IAAD,CAAUc,GAAIN,EAAd,SACI,8BACI,cAAC,IAAKO,KAAN,mnBAgBlBC,EAAmB,SAAC,GAAc,IAAZhB,EAAW,EAAXA,KACxB,EAAwBO,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,mCACI,eAAC,IAAD,CAAMd,UAAU,OAAhB,UACI,cAAC,IAAKe,OAAN,UACI,oBAAIf,UAAU,MAAd,SACI,eAAC,IAAD,CACIgB,GAAG,IACHhB,UAAWsB,IAAW,sCAAuC,CAAEC,WAAoB,IAATV,IAC1EI,QAZT,WACXH,GAAQ,SAACI,GAAD,OAAgBA,MAYJ,gBAAe,WAAab,EAC5B,gBAAeQ,EALnB,qCAM6BR,EAN7B,IAMmC,mBAAGL,UAAU,gDAKxD,cAAC,IAAD,CAAUmB,GAAIN,EAAMW,QAAM,EAA1B,SACI,8BACI,cAAC,IAAKJ,KAAN,mnBAoKTK,UApJI,WACf,MAA4Bb,oBAAS,GAArC,mBAAOc,EAAP,KAAeC,EAAf,KACA,EAAsCf,oBAAS,GAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KACA,EAAwCjB,oBAAS,GAAjD,mBAAOkB,EAAP,KAAqBC,EAArB,KAEMC,EAAS,kBAAML,GAAWD,IAWhC,OACI,eAAC,IAAMO,SAAP,WACI,cAAC,IAAD,CACI9B,gBAAiB,CACb,CAAEK,MAAO,UAAWC,KAAM,kBAC1B,CAAED,MAAO,aAAcC,KAAM,iBAAkBF,QAAQ,IAE3DG,MAAO,eAGX,eAAC,IAAD,WACI,cAAC,IAAD,CAAKwB,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKd,KAAN,WACI,oBAAIpB,UAAU,eAAd,+BACA,oBAAGA,UAAU,0BAAb,iBACQ,4CADR,0EAEc,IACV,mBAAGE,KAAK,gEAAR,kBAHJ,OAMA,qBAAKF,UAAU,YAAf,SACK,CAAC,IAAK,IAAK,KAAKI,KAAI,SAACC,EAAMC,GACxB,OAAO,cAACK,EAAD,CAA8BN,KAAMA,GAAbC,eAOlD,cAAC,IAAD,CAAK4B,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKd,KAAN,WACI,oBAAIpB,UAAU,eAAd,+BACA,oBAAGA,UAAU,0BAAb,mFAC2E,IACvE,qDAFJ,cAGI,8CAHJ,oBAMA,qBAAKA,UAAU,6BAAf,SACK,CAAC,IAAK,IAAK,KAAKI,KAAI,SAACC,EAAMC,GACxB,OAAO,cAACe,EAAD,CAA8BhB,KAAMA,GAAbC,kBAQtD,eAAC,IAAD,WACI,cAAC,IAAD,CAAK4B,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKd,KAAN,WACI,oBAAIpB,UAAU,eAAd,sBACA,mBAAGA,UAAU,0BAAb,2FAGA,8BACI,cAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,kBAAkBiB,QAASe,EAAlD,4BAIA,cAAC,IAAD,CAAQG,MAAM,UAAUnC,UAAU,OAAOoC,KAAK,SAASnB,QAASe,EAAhE,wCAIJ,cAAC,IAAD,CAAUb,GAAIO,EAAd,SACI,8BACI,qBAAK1B,UAAU,sBAAf,0NAWpB,cAAC,IAAD,CAAKkC,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKd,KAAN,WACI,oBAAIpB,UAAU,eAAd,8BACA,oBAAGA,UAAU,0BAAb,sBACa,0CADb,OACoC,wCADpC,oCAGA,8BACI,cAAC,IAAD,CAAMgB,GAAG,IAAIhB,UAAU,kBAAkBiB,QAjGjD,kBAAMY,GAAgBD,IAiGd,kCAIA,cAAC,IAAD,CAAQS,QAAQ,UAAUrC,UAAU,OAAOoC,KAAK,SAASnB,QAnGhE,kBAAMc,GAAiBD,IAmGhB,mCAIA,cAAC,IAAD,CAAQO,QAAQ,UAAUrC,UAAU,OAAOoC,KAAK,SAASnB,QArGlE,WACfY,GAAgBD,GAChBG,GAAiBD,IAmGO,qCAIJ,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAUX,GAAIS,EAAd,SACI,8BACI,qBAAK5B,UAAU,sBAAf,qNAQZ,cAAC,IAAD,UACI,cAAC,IAAD,CAAUmB,GAAIW,EAAd,SACI,8BACI,qBAAK9B,UAAU,sBAAf","file":"static/js/126.5d036dc9.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","// @flow\nimport React, { useState } from 'react';\nimport { Row, Col, Card, Collapse, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst SimpleAccordions = ({ item }) => {\n    const [open, setOpen] = useState(false);\n\n    const toggle = () => {\n        setOpen((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Card className=\"mb-0\">\n                <Card.Header>\n                    <h5 className=\"m-0\">\n                        <Link\n                            to=\"#\"\n                            className=\"custom-accordion-title d-block pt-2 pb-2\"\n                            onClick={toggle}\n                            aria-controls={'collapse' + item}\n                            aria-expanded={open}>\n                            Collapsible Group Item #{item}\n                        </Link>\n                    </h5>\n                </Card.Header>\n\n                <Collapse in={open}>\n                    <div>\n                        <Card.Body>\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                            squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa\n                            nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid\n                            single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft\n                            beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice\n                            lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you\n                            probably haven't heard of them accusamus labore sustainable VHS.\n                        </Card.Body>\n                    </div>\n                </Collapse>\n            </Card>\n        </>\n    );\n};\n\nconst CustomAccordions = ({ item }) => {\n    const [open, setOpen] = useState(false);\n\n    const toggle = () => {\n        setOpen((prevState) => !prevState);\n    };\n\n    return (\n        <>\n            <Card className=\"mb-0\">\n                <Card.Header>\n                    <h5 className=\"m-0\">\n                        <Link\n                            to=\"#\"\n                            className={classNames('custom-accordion-title d-block py-1', { collapsed: open !== true })}\n                            onClick={toggle}\n                            aria-controls={'collapse' + item}\n                            aria-expanded={open}>\n                            Collapsible Group Item #{item} <i className=\"mdi mdi-chevron-down accordion-arrow\"></i>\n                        </Link>\n                    </h5>\n                </Card.Header>\n\n                <Collapse in={open} appear>\n                    <div>\n                        <Card.Body>\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                            squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa\n                            nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid\n                            single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft\n                            beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice\n                            lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you\n                            probably haven't heard of them accusamus labore sustainable VHS.\n                        </Card.Body>\n                    </div>\n                </Collapse>\n            </Card>\n        </>\n    );\n};\n\nconst Accordions = (): React$Element<React$FragmentType> => {\n    const [isOpen, setIsOpen] = useState(true);\n    const [isOpenFirst, setIsOpenFirst] = useState(true);\n    const [isOpenSecond, setIsOpenSecond] = useState(true);\n\n    const toggle = () => setIsOpen(!isOpen);\n\n    const toggleFirst = () => setIsOpenFirst(!isOpenFirst);\n\n    const toggleSecond = () => setIsOpenSecond(!isOpenSecond);\n\n    const toggleBoth = () => {\n        setIsOpenFirst(!isOpenFirst);\n        setIsOpenSecond(!isOpenSecond);\n    };\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/accordions' },\n                    { label: 'Accordions', path: '/ui/accordions', active: true },\n                ]}\n                title={'Accordions'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Simple Accordions</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Use <code>Collapse</code> component to create accordions. The details documentation is\n                                available{' '}\n                                <a href=\"https://react-bootstrap-v5.netlify.app/utilities/transitions/\">here</a>.\n                            </p>\n\n                            <div className=\"accordion\">\n                                {['1', '2', '3'].map((item, index) => {\n                                    return <SimpleAccordions key={index} item={item} />;\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Custom Accordions</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can have custom look and feel for accorion as well. Just use class{' '}\n                                <code>.custom-accordion</code> along with\n                                <code>.accordion</code> as a wrapper.\n                            </p>\n\n                            <div className=\"accordion custom-accordion\">\n                                {['1', '2', '3'].map((item, index) => {\n                                    return <CustomAccordions key={index} item={item} />;\n                                })}\n                            </div>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Collapse</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Collapse provides the way to toggle the visibility of any content or element.\n                            </p>\n                            <p>\n                                <Link to=\"#\" className=\"btn btn-primary\" onClick={toggle}>\n                                    Link with href\n                                </Link>\n\n                                <Button color=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggle}>\n                                    Button with data-target\n                                </Button>\n                            </p>\n                            <Collapse in={isOpen}>\n                                <div>\n                                    <div className=\"card card-body mb-0\">\n                                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry\n                                        richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes\n                                        anderson cred nesciunt sapiente ea proident.\n                                    </div>\n                                </div>\n                            </Collapse>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Multiple Targets</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                Multiple <code>Button</code> or <code>Link</code> can show and hide an element.\n                            </p>\n                            <p>\n                                <Link to=\"#\" className=\"btn btn-primary\" onClick={toggleFirst}>\n                                    Toggle first element\n                                </Link>\n\n                                <Button variant=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggleSecond}>\n                                    Toggle second element\n                                </Button>\n\n                                <Button variant=\"primary\" className=\"ms-1\" type=\"button\" onClick={toggleBoth}>\n                                    Toggle both elements\n                                </Button>\n                            </p>\n                            <Row>\n                                <Col>\n                                    <Collapse in={isOpenFirst}>\n                                        <div>\n                                            <div className=\"card card-body mb-0\">\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n                                                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n                                                labore wes anderson cred nesciunt sapiente ea proident.\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </Col>\n                                <Col>\n                                    <Collapse in={isOpenSecond}>\n                                        <div>\n                                            <div className=\"card card-body mb-0\">\n                                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n                                                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n                                                labore wes anderson cred nesciunt sapiente ea proident.\n                                            </div>\n                                        </div>\n                                    </Collapse>\n                                </Col>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Accordions;\n"],"sourceRoot":""}