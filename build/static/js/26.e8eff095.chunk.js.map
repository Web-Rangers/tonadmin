{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","components/Table.js","components/Pagination.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/Row.js","pages/dashboard/Validator/IncomeChart2.js","pages/metrics/complaints.js","pages/metrics/chart.js","pages/metrics/complaintsChart.js","pages/metrics/info.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","Constructor","protoProps","staticProps","prototype","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","className","bsPrefix","as","Tag","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","searchBoxClass","count","useState","setValue","onChange","useAsyncDebounce","e","placeholder","IndeterminateCheckbox","forwardRef","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","type","htmlFor","Table","isSearchable","isSortable","pagination","isSelectable","isExpandable","dataTable","useTable","columns","data","initialState","pageSize","autoResetSortBy","autoResetPage","useGlobalFilter","useSortBy","useExpanded","usePagination","useRowSelect","hooks","visibleColumns","push","id","Header","getToggleAllPageRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getToggleAllRowsExpandedProps","isAllRowsExpanded","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","rows","page","state","getTableProps","headerGroups","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","sort","getSortByToggleProps","sorting_desc","isSortedDesc","sorting_asc","sortable","render","getTableBodyProps","prepareRow","getRowProps","cells","cell","getCellProps","tableProps","sizePerPageList","Pagination","setPageSize","Number","index","text","pageIndex","pageOptions","min","max","defaultValue","gotoPage","onClick","disabled","canPreviousPage","previousPage","nextPage","canNextPage","pageCount","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","Row","noGutters","decoratedBsPrefix","sizePrefix","cols","api","APICore","HashrateChart","apexBarChartOpts","grid","padding","left","right","noData","chart","height","parentHeightOffset","toolbar","show","dataLabels","enabled","stroke","curve","width","zoom","legend","colors","xaxis","trim","tickAmount","tooltip","axisBorder","yaxis","labels","formatter","val","toFixed","offsetX","fill","gradient","shadeIntensity","inverseColors","opacityFrom","opacityTo","stops","apexBarChartData","name","loading","wallet","labelsArray","localStorage","getItem","updateChart","period","a","chartData","get","response","result","item","Date","date","setState","isActiveChart","minHeight","Body","position","top","display","animationData","stonksAnimation","options","series","accessor","Wallet","url","href","substr","ComplaintsList","setData","setLoading","updateVL","tableData","adnlAddr","adnl_addr","created_time","toLocaleDateString","election_id","cycle","fine","paid","setLastFine","setAddButton","toLocaleString","minimumFractionDigits","weight","console","log","cycle_info","utime_since","validators","total_weight","stake","Card","title","is_passed","ValidatorsList","setWallet","cycles","setCycles","currentCycle","setCurrentCycle","setCyclesList","cyclesCount","setCyclesCount","address","useParams","wallet_address","findIndex","x","cycle_id","toString"],"mappings":"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","file":"static/js/26.e8eff095.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","// @flow\nimport React, { useRef, useEffect, forwardRef, useMemo } from 'react';\nimport {\n    useTable,\n    useSortBy,\n    usePagination,\n    useRowSelect,\n    useGlobalFilter,\n    useAsyncDebounce,\n    useExpanded,\n} from 'react-table';\nimport classNames from 'classnames';\n\n// components\nimport Pagination from './Pagination';\n\n// Define a default UI for filtering\nconst GlobalFilter = ({ preGlobalFilteredRows, globalFilter, setGlobalFilter, searchBoxClass }) => {\n    const count = preGlobalFilteredRows.length;\n    const [value, setValue] = React.useState(globalFilter);\n    const onChange = useAsyncDebounce((value) => {\n        setGlobalFilter(value || undefined);\n    }, 200);\n\n    return (\n        <div className={classNames(searchBoxClass)}>\n            <span className=\"d-flex align-items-center\">\n                Search :{' '}\n                <input\n                    value={value || ''}\n                    onChange={(e) => {\n                        setValue(e.target.value);\n                        onChange(e.target.value);\n                    }}\n                    placeholder={`${count} records...`}\n                    className=\"form-control w-auto ms-1\"\n                />\n            </span>\n        </div>\n    );\n};\n\nconst IndeterminateCheckbox = forwardRef(({ indeterminate, ...rest }, ref) => {\n    const defaultRef = useRef();\n    const resolvedRef: any = ref || defaultRef;\n\n    useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate;\n    }, [resolvedRef, indeterminate]);\n\n    return (\n        <>\n            <div className=\"form-check\">\n                <input type=\"checkbox\" className=\"form-check-input\" ref={resolvedRef} {...rest} />\n                <label htmlFor=\"form-check-input\" className=\"form-check-label\"></label>\n            </div>\n        </>\n    );\n});\n\ntype TableProps = {\n    isSearchable?: boolean,\n    isSortable?: boolean,\n    pagination?: boolean,\n    isSelectable?: boolean,\n    isExpandable?: boolean,\n    pageSize: number,\n    columns: Array<any>,\n    data: Array<any>,\n    searchBoxClass?: string,\n    tableClass?: string,\n    theadClass?: string,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Table = (props: TableProps): React$Element<React$FragmentType> => {\n    const isSearchable = props['isSearchable'] || false;\n    const isSortable = props['isSortable'] || false;\n    const pagination = props['pagination'] || false;\n    const isSelectable = props['isSelectable'] || false;\n    const isExpandable = props['isExpandable'] || false;\n\n    const dataTable = useTable(\n        {\n            columns: props['columns'],\n            data: props['data'],\n            initialState: {pageSize: props['pageSize'] || 10 },\n            autoResetSortBy: false,\n            autoResetPage: false,\n        },\n        isSearchable && useGlobalFilter,\n        isSortable && useSortBy,\n        isExpandable && useExpanded,\n        pagination && usePagination,\n        isSelectable && useRowSelect,\n        (hooks) => {\n            isSelectable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        id: 'selection',\n                        // The header can use the table's getToggleAllRowsSelectedProps method\n                        // to render a checkbox\n                        Header: ({ getToggleAllPageRowsSelectedProps }) => (\n                            <div>\n                                <IndeterminateCheckbox {...getToggleAllPageRowsSelectedProps()} />\n                            </div>\n                        ),\n                        // The cell can use the individual row's getToggleRowSelectedProps method\n                        // to the render a checkbox\n                        Cell: ({ row }) => (\n                            <div>\n                                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                            </div>\n                        ),\n                    },\n                    ...columns,\n                ]);\n\n            isExpandable &&\n                hooks.visibleColumns.push((columns) => [\n                    // Let's make a column for selection\n                    {\n                        // Build our expander column\n                        id: 'expander', // Make sure it has an ID\n                        Header: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\n                            <span {...getToggleAllRowsExpandedProps()}>{isAllRowsExpanded ? '-' : '+'}</span>\n                        ),\n                        Cell: ({ row }) =>\n                            // Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n                            // to build the toggle for expanding a row\n                            row.canExpand ? (\n                                <span\n                                    {...row.getToggleRowExpandedProps({\n                                        style: {\n                                            // We can even use the row.depth property\n                                            // and paddingLeft to indicate the depth\n                                            // of the row\n                                            paddingLeft: `${row.depth * 2}rem`,\n                                        },\n                                    })}>\n                                    {row.isExpanded ? '-' : '+'}\n                                </span>\n                            ) : null,\n                    },\n                    ...columns,\n                ]);\n        }\n    );\n    let rows = pagination ? dataTable.page : dataTable.rows;\n\n    return (\n        <>\n            {isSearchable && (\n                <GlobalFilter\n                    preGlobalFilteredRows={dataTable.preGlobalFilteredRows}\n                    globalFilter={dataTable.state.globalFilter}\n                    setGlobalFilter={dataTable.setGlobalFilter}\n                    searchBoxClass={props['searchBoxClass']}\n                />\n            )}\n\n            <div className=\"table-responsive\">\n                <table\n                    {...dataTable.getTableProps()}\n                    className={classNames('table table-centered react-table', props['tableClass'])}>\n                    <thead className={props['theadClass']}>\n                        {dataTable.headerGroups.map((headerGroup) => (\n                            <tr {...headerGroup.getHeaderGroupProps()}>\n                                {headerGroup.headers.map((column) => (\n                                    <th\n                                        {...column.getHeaderProps(column.sort && column.getSortByToggleProps())}\n                                        className={classNames({\n                                            sorting_desc: column.isSortedDesc === true,\n                                            sorting_asc: column.isSortedDesc === false,\n                                            sortable: column.sort === true,\n                                        })}>\n                                        {column.render('Header')}\n                                    </th>\n                                ))}\n                            </tr>\n                        ))}\n                    </thead>\n                    <tbody {...dataTable.getTableBodyProps()}>\n                        {(rows || []).map((row, i) => {\n                            dataTable.prepareRow(row);\n                            return (\n                                <tr {...row.getRowProps()}>\n                                    {row.cells.map((cell) => {\n                                        return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\n                                    })}\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </table>\n            </div>\n\n            {pagination && <Pagination tableProps={dataTable} sizePerPageList={props['sizePerPageList']} />}\n        </>\n    );\n};\n\nexport default Table;\n","// @flow\nimport React from 'react';\n\ntype PaginationProps = {\n    tableProps: any,\n    sizePerPageList: {\n        text: string,\n        value: number,\n    }[],\n};\n\nconst Pagination = ({ tableProps, sizePerPageList }: PaginationProps): React$Element<React$FragmentType> => {\n    return (\n        <>\n            <div className=\"d-lg-flex align-items-center text-center pb-1\">\n                <label className=\"me-1\">Display :</label>\n                <select\n                    value={tableProps.state.pageSize}\n                    onChange={(e) => {\n                        tableProps.setPageSize(Number(e.target.value));\n                    }}\n                    className=\"form-select d-inline-block w-auto\">\n                    {sizePerPageList.map((pageSize, index) => {\n                        return (\n                            <option key={index} value={pageSize.value}>\n                                {pageSize.text}\n                            </option>\n                        );\n                    })}\n                </select>\n\n                <span className=\"mx-3\">\n                    Page{' '}\n                    <strong>\n                        {tableProps.state.pageIndex + 1} of {tableProps.pageOptions.length}\n                    </strong>{' '}\n                </span>\n\n                <span className=\"d-inline-block align-items-center text-sm-start text-center my-sm-0 my-2\">\n                    <label>Go to page : </label>\n                    {tableProps.pageOptions.length>=1 ? \n                        <input\n                        type=\"number\"\n                        min={1}\n                        max={tableProps.pageOptions.length}\n                        defaultValue={tableProps.state.pageIndex + 1}\n                        onChange={(e) => {\n                            const page = e.target.value ? Number(e.target.value) - 1 : 0;\n                            tableProps.gotoPage(page);\n                        }}\n                        className=\"form-control w-auto ms-1 d-inline-block\"\n                        />\n                        :\n                        null\n                    }                    \n                </span>\n\n                <div className=\"pagination pagination-rounded d-inline-flex ms-auto\">\n                    <button\n                        onClick={() => tableProps.gotoPage(0)}\n                        className=\"page-link\"\n                        disabled={!tableProps.canPreviousPage}>\n                        {'<<'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.previousPage()}\n                        className=\"page-link\"\n                        disabled={!tableProps.canPreviousPage}>\n                        {'<'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.nextPage()}\n                        className=\"page-link\"\n                        disabled={!tableProps.canNextPage}>\n                        {'>'}\n                    </button>{' '}\n                    <button\n                        onClick={() => tableProps.gotoPage(tableProps.pageCount - 1)}\n                        className=\"page-link\"\n                        disabled={!tableProps.canNextPage}>\n                        {'>>'}\n                    </button>{' '}\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Pagination;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, ...spans, ...classes)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst defaultProps = {\n  noGutters: false\n};\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  noGutters,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters', ...classes)\n  });\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport Lottie from \"lottie-react\";\nimport stonksAnimation from \"../../../assets/stonks.json\";\n\nimport { APICore } from '../../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nclass HashrateChart extends React.Component{\n  constructor(props){\n    super(props);\n\n    const colors = ['#0088CC'];\n\n    let apexBarChartOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        noData: {\n          text: 'No Data'\n        },\n        chart: {\n            height: 550,\n            type: 'area',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'straight',\n            width: 2,\n        },\n        zoom: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        colors: colors,\n        xaxis: {\n            type: 'datetime',\n            trim: true,\n            tickAmount: 20,\n            tooltip: {\n                enabled: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n        },\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val.toFixed(0) + \" TONS\";\n                },\n                offsetX: -15,\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                type: 'vertical',\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.45,\n                opacityTo: 0.1,\n                stops: [45, 100],\n            },\n        },\n    };\n\n    let apexBarChartData = [\n        {\n            name: 'Income',\n            data: [],\n        },\n    ];\n\n    this.state = {\n      apexBarChartData,\n      apexBarChartOpts,\n      loading: true,\n      wallet: props.wallet,\n      labelsArray: []\n    }\n\n  }\n\n\n\n  componentDidMount(){\n    if(localStorage.getItem('validatorAddress') || this.props.wallet){\n        this.updateChart('m', 1)\n    }\n  }\n\n  async updateChart(period, value){\n    let chartData = []\n    api.get(\"https://tonadmin.org/api/v1/chart/validator?wallet=\"+this.state.wallet+\"&time_period=\" + period + \"&time_value=\" + value).then(response => {\n      let data = response.data.result\n      for(let item of data){\n          if(item.value < 3000 && item.value > -100){\n                 chartData.push({'x': new Date(item.date * 1000), 'y' : item.value})\n          }\n      }\n\n      let apexBarChartData = [\n          {\n              name: 'Income',\n              data: chartData,\n          },\n      ];\n\n      this.setState({apexBarChartData, isActiveChart: period + value, loading: false})\n    })\n\n  }\n\n\n\n  render(){\n    const {show, isActiveChart, loading} = this.state;\n    return (\n        <Card className=\"card-h-100\" style={{minHeight: 600}}>\n            <Card.Body>\n                <ul className=\"nav float-end d-none d-lg-flex\">\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 'd7' ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart('h', 168) } >\n                            7d\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 'm1' ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart('m', 1) } >\n                            1m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 'm3' ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart('m', 3) } >\n                            3m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 'y1' ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart('y', 1) } >\n                            1y\n                        </button>\n                    </li>\n                </ul>\n\n                <h4 className=\"header-title mb-3\">Validator earnings overview</h4>\n                  {loading ?\n                    <div style={{position: \"absolute\", left: \"calc(50% - 50px)\", top: \"calc(50% - 50px)\"}}>\n                      <Lottie style={{width: 100, display: 'inline-block'}} animationData={stonksAnimation} />\n                    </div>\n                    :\n                    <Chart\n                        options={this.state.apexBarChartOpts}\n                        series={this.state.apexBarChartData}\n                        type=\"area\"\n                        className=\"apex-charts mt-3\"\n                        height={550}\n                    />\n                  }\n            </Card.Body>\n        </Card>\n    );\n  }\n};\n\nexport default HashrateChart;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Modal, Alert } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\nimport classNames from 'classnames';\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\n// components\n\nimport Table from '../../components/Table';\n\n\nconst columns = [\n    {\n        Header: 'ADNL',\n        accessor: 'adnlAddr',\n        sort: true,\n        Cell: Wallet,\n    },\n    {\n        Header: 'Fine receiver',\n        accessor: 'reward_addr',\n        sort: true,\n        Cell: Wallet,\n    },\n    {\n        Header: 'Date',\n        accessor: 'date',\n        sort: true,\n    },\n    {\n        Header: 'Election id',\n        accessor: 'election_id',\n        sort: true,\n        Cell: Election,\n    },\n    {\n        Header: 'Fine',\n        accessor: 'fine',\n        sort: true,\n    }\n\n];\n\nconst sizePerPageList = [\n    {\n        text: '5',\n        value: 5,\n    },\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    }\n];\n\n\n\nfunction Wallet({ value }) {\n  let url = \"/metrics/info/\" + value;\n // if(value.length <= 48){\n if(value){\n     return <a href={url}>{value.substr(0, 10) + '...' + value.substr(40, value.length)}</a>\n }\n    return <a href={url}>{value}</a>\n\n // }else{\n//    return value;\n // }\n\n}\n\n\n\nfunction Election({ value }) {\n    return <span className={value[1] ? 'text-success' : ''}>{value[0]}</span>\n}\n\n\n\n\nconst ComplaintsList = (props): React$Element<any> => {\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const toggleCreate = () => {\n        setCreateModal(!createModal);\n    };\n\n    useEffect(async () => {\n      updateVL()\n    }, []);\n\n    const updateVL = async () =>{\n      setLoading(true)\n      const result = await api.get(`https://elections.toncenter.com/getComplaints?offset=0&limit=100${props.wallet ? (props.wallet?.length == 64 ? ('&adnl_address=' + props.wallet) : ('&wallet_address=' + props.wallet)) : ''}`);\n\n      if(result && !result.error && result.data){\n        let data = result.data\n          let tableData = []\n\n            data.forEach(row => {\n              tableData.push({\n                  adnlAddr: row.adnl_addr,\n                  date: new Date(row.created_time * 1000).toLocaleDateString('en-GB') ,\n                  election_id: [row.election_id, row.election_id == props.cycle],\n                  fine: (row.paid/10**9).toFixed(1),\n              })\n            })\n            setData(tableData);\n\n            props.setLastFine && tableData.length > 0 && props.setLastFine(tableData[0])\n      }else{\n          setData([]);\n          setAddButton(true)\n      }\n      setLoading(false)\n    }\n\n\n    return (\n        <>\n          <Row>\n              <Col>\n                <h4 className=\"header-title mb-3\">Validators fines</h4>\n                  <Card className=\"mt-2\">\n                      <Card.Body>\n                          {data.length > 0 ?\n                          <Table\n                              isSearchable={true}\n                              columns={columns}\n                              data={data}\n                              sizePerPageList={sizePerPageList}\n                              isSortable={true}\n                              pagination={true}\n                              pageSize={10}\n                          />\n                          :\n                          <p>No data</p>\n                          }\n                      </Card.Body>\n                  </Card>\n              </Col>\n          </Row>\n        </>\n    );\n};\n\nexport default ComplaintsList;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport Lottie from \"lottie-react\";\nimport stonksAnimation from \"../../assets/stonks.json\";\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nclass HashrateChart extends React.Component{\n  constructor(props){\n    super(props);\n\n    const colors = ['#0088CC'];\n\n    let apexBarChartOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        noData: {\n          text: 'No Data'\n        },\n        chart: {\n            height: 550,\n            type: 'area',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'straight',\n            width: 2,\n        },\n        zoom: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        colors: colors,\n        xaxis: {\n            type: 'datetime',\n            trim: true,\n            tickAmount: 20,\n            tooltip: {\n                enabled: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n        },\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val.toLocaleString('en-US', {minimumFractionDigits: 3}) + (props.weight ? '%' : ' TONS');\n                },\n                offsetX: -15,\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                type: 'vertical',\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.45,\n                opacityTo: 0.1,\n                stops: [45, 100],\n            },\n        },\n    };\n\n    let apexBarChartData = [\n        {\n            name: 'Income',\n            data: [],\n        },\n    ];\n\n    this.state = {\n      apexBarChartData,\n      apexBarChartOpts,\n      loading: true,\n      wallet: props.wallet,\n      labelsArray: []\n    }\n\n  }\n\n\n\n  componentDidMount(){\n    if( this.props.wallet){\n        this.updateChart(120)\n    }\n  }\n\n  async updateChart(count){\n    let chartData = []\n    console.log(`https://elections.toncenter.com/getValidationCycles?${this.props.wallet.length == 64 ? 'adnl_address' : 'wallet_address'}=${this.props.wallet}&return_participants=false&offset=0&limit=${count}`)\n    api.get(`https://elections.toncenter.com/getValidationCycles?${this.props.wallet.length == 64 ? 'adnl_address' : 'wallet_address'}=${this.props.wallet}&return_participants=false&offset=0&limit=${count}`).then(response => {\n      let data = response.data\n      for(let item of data){\n          if(this.props.weight){\n              chartData.push({'x': item.cycle_info.utime_since*1000, 'y' : item.cycle_info.validators[0].weight/item.cycle_info.total_weight * 100})\n          }else{\n              chartData.push({'x': item.cycle_info.utime_since*1000, 'y' : item.cycle_info.validators[0].stake/10**9})\n          }\n\n      }\n\n\n      let apexBarChartData = [\n          {\n              name: this.props.weight ? 'Validator weight' : 'Validator stake',\n              data: chartData,\n          },\n      ];\n\n      this.setState({apexBarChartData, isActiveChart: count, loading: false})\n    })\n\n  }\n\n\n\n  render(){\n    const {show, isActiveChart, loading} = this.state;\n    return (\n        <Card className=\"card-h-100\" style={{minHeight: 600}}>\n            <Card.Body>\n                <ul className=\"nav float-end d-none d-lg-flex\">\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 10 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(10) } >\n                            7d\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 40 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(40) } >\n                            1m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 120 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(120) } >\n                            3m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 486 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(486) } >\n                            1y\n                        </button>\n                    </li>\n                </ul>\n\n                <h4 className=\"header-title mb-3\">{this.props.title}</h4>\n                  {loading ?\n                    <div style={{position: \"absolute\", left: \"calc(50% - 50px)\", top: \"calc(50% - 50px)\"}}>\n                      <Lottie style={{width: 100, display: 'inline-block'}} animationData={stonksAnimation} />\n                    </div>\n                    :\n                    <Chart\n                        options={this.state.apexBarChartOpts}\n                        series={this.state.apexBarChartData}\n                        type=\"area\"\n                        className=\"apex-charts mt-3\"\n                        height={550}\n                    />\n                  }\n            </Card.Body>\n        </Card>\n    );\n  }\n};\n\nexport default HashrateChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport Lottie from \"lottie-react\";\nimport stonksAnimation from \"../../assets/stonks.json\";\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nclass HashrateChart extends React.Component{\n  constructor(props){\n    super(props);\n\n    const colors = ['#0088CC'];\n\n    let apexBarChartOpts = {\n        grid: {\n            padding: {\n                left: 0,\n                right: 0,\n            },\n        },\n        noData: {\n          text: 'No Data'\n        },\n        chart: {\n            height: 550,\n            type: 'area',\n            parentHeightOffset: 0,\n            toolbar: {\n                show: true,\n            },\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            curve: 'straight',\n            width: 2,\n        },\n        zoom: {\n            enabled: false,\n        },\n        legend: {\n            show: false,\n        },\n        colors: colors,\n        xaxis: {\n            type: 'datetime',\n            trim: true,\n            tickAmount: 20,\n            tooltip: {\n                enabled: false,\n            },\n            axisBorder: {\n                show: false,\n            },\n        },\n        yaxis: {\n            labels: {\n                formatter: function (val) {\n                    return val.toLocaleString('en-US', {minimumFractionDigits: 2}) + \" TONS\";\n                },\n                offsetX: -15,\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                type: 'vertical',\n                shadeIntensity: 1,\n                inverseColors: false,\n                opacityFrom: 0.45,\n                opacityTo: 0.1,\n                stops: [45, 100],\n            },\n        },\n    };\n\n    let apexBarChartData = [\n        {\n            name: 'Income',\n            data: [],\n        },\n    ];\n\n    this.state = {\n      apexBarChartData,\n      apexBarChartOpts,\n      loading: true,\n      wallet: props.wallet,\n      labelsArray: []\n    }\n\n  }\n\n\n\n  componentDidMount(){\n    if( this.props.wallet){\n        this.updateChart(120)\n    }\n  }\n\n  async updateChart(count){\n    let chartData = []\n\n    api.get(`https://elections.toncenter.com/getComplaints?${this.props.wallet.length == 64 ? 'adnl_address' : 'wallet_address'}=${this.props.wallet}&return_participants=false&offset=0&limit=${count}`).then(response => {\n      let data = response.data\n      for(let item of data){\n          if(item.is_passed){\n              chartData.push({'x': item.created_time*1000, 'y' : item.paid/10**9})\n          }\n\n      }\n\n\n      let apexBarChartData = [\n          {\n              name: 'Paid: ',\n              data: chartData,\n          },\n      ];\n\n      this.setState({apexBarChartData, isActiveChart: count, loading: false})\n    })\n\n  }\n\n\n\n  render(){\n    const {show, isActiveChart, loading} = this.state;\n    return (\n        <Card className=\"card-h-100\" style={{minHeight: 600}}>\n            <Card.Body>\n                <ul className=\"nav float-end d-none d-lg-flex\">\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 10 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(10) } >\n                            7d\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 40 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(40) } >\n                            1m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 120 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(120) } >\n                            3m\n                        </button>\n                    </li>\n                    <li className=\"nav-item\">\n                        <button className={`nav-link ${isActiveChart == 486 ? \"active\" : \"text-muted\"}`} onClick={() => this.updateChart(486) } >\n                            1y\n                        </button>\n                    </li>\n                </ul>\n\n                <h4 className=\"header-title mb-3\">Validator complaints</h4>\n                  {loading ?\n                    <div style={{position: \"absolute\", left: \"calc(50% - 50px)\", top: \"calc(50% - 50px)\"}}>\n                      <Lottie style={{width: 100, display: 'inline-block'}} animationData={stonksAnimation} />\n                    </div>\n                    :\n                    <Chart\n                        options={this.state.apexBarChartOpts}\n                        series={this.state.apexBarChartData}\n                        type=\"area\"\n                        className=\"apex-charts mt-3\"\n                        height={550}\n                    />\n                  }\n\n\n            </Card.Body>\n        </Card>\n    );\n  }\n};\n\nexport default HashrateChart;\n","// @flow\nimport React, { useState, useEffect } from 'react';\nimport { Row, Col, Card, Button, Modal, Alert } from 'react-bootstrap';\nimport Skeleton from 'react-loading-skeleton';\nimport IncomeChart from '../dashboard/Validator/IncomeChart2';\nimport Chart from './chart'\nimport ComplaintsChart from './complaintsChart'\nimport { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport axios from 'axios';\nimport { APICore } from '../../helpers/api/apiCore';\nimport ComplaintsList from './complaints';\n\nconst api = new APICore();\n\n// components\n\nimport Table from '../../components/Table';\n\nconst columns = [\n    {\n        Header: 'Wallet / ADNL',\n        accessor: 'adnlAddr',\n        sort: true,\n        Cell: Wallet,\n    },\n    {\n        Header: 'Stake',\n        accessor: 'stake',\n        sort: true,\n    },\n    {\n        Header: 'Weight',\n        accessor: 'weight',\n        sort: true,\n    }\n\n];\n\nconst sizePerPageList = [\n    {\n        text: '5',\n        value: 5,\n    },\n    {\n        text: '10',\n        value: 10,\n    },\n    {\n        text: '25',\n        value: 25,\n    }\n];\n\n\n\nfunction Wallet({ value }) {\n  let url = \"/metrics/info?address=\" + value;\n  if(value.length <= 48){\n    return <a target=\"_blank\" href={url}>{value}</a>\n  }else{\n    return value;\n  }\n}\n\n\n\n\nconst ValidatorsList = (props): React$Element<any> => {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [wallet, setWallet] = useState();\n    const [cycles, setCycles] = useState(0);\n    const [currentCycle, setCurrentCycle] = useState(0);\n    const [cyclesList, setCyclesList] = useState()\n    const [cyclesCount, setCyclesCount] = useState()\n    const { address } = useParams()\n\n    const toggleCreate = () => {\n        setCreateModal(!createModal);\n    };\n\n    useEffect(async () => {\n      updateVL()\n    }, []);\n\n    const updateVL = async () => {\n        api.get('https://elections.toncenter.com/getElections?return_participants=false&offset=0&limit=200').then(response => {\n            setCyclesList(response.data)\n            setCurrentCycle(response.data[0].election_id);\n        })\n        api.get(`https://elections.toncenter.com/getValidationCycles?${address.length == 64 ? 'adnl_address' : 'wallet_address'}=${address}&return_participants=false&offset=0&limit=1000000000`).then(response => {\n            setCycles(response.data)\n            setWallet(response.data[0].cycle_info.validators[0].wallet_address)\n        })\n    }\n\n    const setLastFine = async (id) => {\n        console.log(cycles)\n        setCyclesCount(cycles.findIndex((x) => {if(x.cycle_id == id.election_id[0]){return x} }).toString())\n    }\n    return (\n        <>\n        <Row>\n            <Col>\n                <Card className=\"tilebox-one\">\n                    <Card.Body>\n                        <i className=\"mdi mdi-console-network-outline float-end\"></i>\n                        <h6 className=\"text-uppercase mt-0\">Number of completed cycles</h6>\n                        <h2 className=\"my-2\" id=\"active-users-count\">\n                            {cycles.length}\n                        </h2>\n\n                        <p className=\"mb-0 text-muted\">\n                            <span className=\"text-nowrap\">Cycles in a row without penalty: {cyclesCount ? cyclesCount : cycles.length}</span>\n                        </p>\n                    </Card.Body>\n                </Card>\n            </Col>\n            <Col>\n                <Card className=\"tilebox-one\">\n                    <Card.Body>\n                        <i className=\"mdi mdi-console-network-outline float-end\"></i>\n                        <h6 className=\"text-uppercase mt-0\">Current cycle id</h6>\n                        <h2 className=\"my-2\" id=\"active-users-count\">\n                            {currentCycle}\n                        </h2>\n\n                    </Card.Body>\n                </Card>\n            </Col>\n        </Row>\n        <Row>\n            <Col>\n              <h4 className=\"header-title mb-3\">Validator info</h4>\n              {wallet &&\n                  <IncomeChart wallet={wallet}/>\n              }\n            </Col>\n        </Row>\n\n        <Row className=\"pt-5\">\n          <Col>\n              <Chart title=\"Validator stake overview\" wallet={address}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n              <Chart title=\"Validator weight overview\" weight={true} wallet={address}/>\n          </Col>\n        </Row>\n\n\n        <Row>\n          <Col>\n              <ComplaintsChart wallet={address}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n              {cycles &&\n              <ComplaintsList setLastFine={setLastFine} cycle={currentCycle} wallet={address}/>\n              }\n          </Col>\n        </Row>\n        </>\n    );\n};\n\nexport default ValidatorsList;\n"],"sourceRoot":""}