{"version":3,"sources":["../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-table/index.js","../../src/publicUtils.js","../../src/utils.js","../../src/makeDefaultPluginHooks.js","../../src/hooks/useColumnVisibility.js","../../src/hooks/useTable.js","../../src/plugin-hooks/useExpanded.js","../../src/filterTypes.js","../../src/plugin-hooks/useFilters.js","../../src/plugin-hooks/useGlobalFilter.js","../../src/aggregations.js","../../src/plugin-hooks/useGroupBy.js","../../src/sortTypes.js","../../src/plugin-hooks/useSortBy.js","../../src/plugin-hooks/usePagination.js","../../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../../src/plugin-hooks/useRowSelect.js","../../src/plugin-hooks/useRowState.js","../../src/plugin-hooks/useColumnOrder.js","../../src/plugin-hooks/useResizeColumns.js","../../src/plugin-hooks/useAbsoluteLayout.js","../../src/plugin-hooks/useBlockLayout.js","../../src/plugin-hooks/useFlexLayout.js","../../src/plugin-hooks/useGridLayout.js"],"names":["rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","isTrivialHref","href","trim","SafeAnchor","disabled","onKeyDown","handleClick","event","onClick","preventDefault","stopPropagation","role","tabIndex","createChainedFunction","key","p","context","funcs","filter","f","reduce","acc","Error","args","apply","this","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","length","BreadcrumbItem","active","children","linkAs","LinkComponent","linkProps","title","target","undefined","Breadcrumb","listProps","label","Object","assign","Item","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","module","exports","require","actions","init","defaultRenderer","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","next","style","makePropGetter","hooks","meta","userProps","prev","handlePropGetter","prevProps","Array","isArray","reduceHooks","initial","allowUndefined","loopHooks","hook","ensurePluginOrder","plugins","befores","pluginName","afters","findIndex","plugin","before","functionalUpdate","updater","old","useGetLatest","obj","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","makeRenderer","instance","column","type","Comp","console","info","flexRender","component","proto","getPrototypeOf","prototype","isReactComponent","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","accessorPath","split","path","def","val","cacheKey","JSON","stringify","pathObj","pathObjCache","get","flattenDeep","arr","newArr","i","String","d","join","reOpenBracket","reCloseBracket","set","cursor","pathPart","e","row","error","decorateColumn","userDefaultColumn","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","headerGroup","headers","parentColumns","hasParents","some","newParent","latestParentColumn","reverse","originalId","placeholderOf","Map","getFirstDefined","isFunction","a","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","userFilterTypes","filterTypes","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","defaultGetTableProps","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","checked","isVisible","allColumnsHidden","indeterminate","action","previousState","initialState","columnId","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","calculateHeaderWidths","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRowsForColumn","data","flatRows","rowsById","accessValueHooks","originalRow","rowIndex","accessRow","parentRows","originalSubRows","cells","values","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","isAllRowsExpanded","keys","rowId","setExpanded","exists","shouldExist","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","Boolean","expandedDepth","maxDepth","splitId","preExpandedRows","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","find","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredFlatRows","filteredRowsById","filterRows","filteredRows","filteredSoFar","preFilteredRows","warn","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","columnDisableGlobalFilter","filterableColumns","c","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","mid","floor","nums","sort","b","from","Set","size","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultColumnGroupBy","defaultGroupBy","columnDisableGroupBy","Aggregated","existingGroupBy","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","groupedRows","groupUpRecursively","parentId","rowGroupsMap","entries","groupByVal","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","allCells","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","compareBasic","getRowValuesByColumnID","row1","row2","toString","isNaN","rowA","rowB","aa","shift","bb","an","parseInt","bn","combo","getTime","alower","blower","replaceNonNumeric","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","sortAction","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","newSortBy","splice","orderByFn","defaultOrderByFn","userSortTypes","sortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","sortedRows","getAutoResetSortBy","preSortedRows","preSortedFlatRows","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","newMaterialized","buildPivotColumns","pivotFilters","pivotColumn","u","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","sourceColumn","isPivoted","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultColumnPivot","defaultPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","allChildrenSelected","someSelected","getAutoResetSelectedRows","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headerIdWidths","leafHeaders","recurseHeader","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","removeEventListener","touch","cancelable","events","passiveIfSupported","supported","options","window","addEventListener","err","passive","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","cellStyles","top","useAbsoluteLayout","getRowStyles","totalColumnsWidth","display","boxSizing","useBlockLayout","useFlexLayout","totalColumnsMinWidth","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementById","offsetWidth","startingWidth","newWidth","columnWidthsCopy","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","userColumns","getStateReducer","s","handler","useReducer","reducerState","allColumnsQueue","initialRows","all","visibleColumnsDep","totalColumnsMaxWidth","render","footerGroups"],"mappings":"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","file":"static/js/8.2ae66010.chunk.js","sourcesContent":["var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst defaultProps = {\n  noGutters: false\n};\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  noGutters,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters', ...classes)\n  });\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, ...spans, ...classes)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = SafeAnchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","if (process.env.NODE_ENV === 'production') {\n  module.exports = require('./dist/react-table.production.min.js')\n} else {\n  module.exports = require('./dist/react-table.development.js')\n}\n","import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"],"sourceRoot":""}