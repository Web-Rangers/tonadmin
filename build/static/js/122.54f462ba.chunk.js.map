{"version":3,"sources":["pages/charts/Brite/BarChart.js","pages/charts/Brite/HorizontalBarChart.js","pages/charts/Brite/StepChart.js","pages/charts/Brite/DonutChart.js","pages/charts/Brite/LineChart.js","pages/charts/Brite/index.js","components/PageTitle.js"],"names":["ResponsiveBarChart","withResponsiveness","Bar","BarChart","Card","Body","className","style","width","height","isAnimated","data","name","value","isHorizontal","betweenBarsPadding","colorSchema","margin","top","left","bottom","right","HorizontalBarChart","enableLabels","percentageAxisToMaxRatio","labelsNumberFormat","ResponsiveStepChart","Step","StepChart","key","DonutChart","donutData","id","quantity","percentage","render","Row","Col","internalRadius","hasFixedHighlightedSlice","numberFormat","LineChart","dataByTopic","topic","topicName","dates","date","fullDate","props","aspectRatio","tooltipThreshold","grid","topicLabel","title","dateLabel","valueLabel","BriteChart","Fragment","PageTitle","breadCrumbItems","label","path","active","xl","Item","href","map","item","index"],"mappings":"oMAKMA,EAAqBC,6BAAmBC,OAyC/BC,EAtCE,WAkBb,OACI,cAACC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,uBACA,qBAAKA,UAAU,gBAAgBC,MApBf,CACxBC,MAAO,OACPC,OAAQ,SAkBA,SACI,cAACT,EAAD,CACIU,YAAY,EACZC,KAjBC,CACjB,CAAEC,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,OAWNC,cAAc,EACdL,OAAQ,IACRM,mBAAoB,GACpBC,YAAa,CAAC,WACdC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,cCjClErB,EAAqBC,6BAAmBC,OA0C/BoB,EAvCY,WAkBvB,OACI,cAAClB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,kCACA,qBAAKA,UAAU,gBAAgBC,MApBf,CACxBC,MAAO,OACPC,OAAQ,SAkBA,SACI,cAAC,EAAD,CACIE,KAhBC,CACjB,CAAEC,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,KACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,MACtB,CAAED,KAAM,MAAOC,MAAO,OAUNC,cAAc,EACdL,OAAQ,IACRc,cAAc,EACdC,yBAA0B,IAC1BC,mBAAoB,EACpBT,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAChFC,OAAQ,CAAEC,IAAK,GAAIC,KAAM,GAAIC,OAAQ,GAAIC,MAAO,cClClEK,EAAsBzB,6BAAmB0B,QAqChCC,EAlCG,WAkBd,OACI,cAACxB,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,wBACA,qBAAKA,UAAU,iBAAiBC,MApBhB,CACxBC,MAAO,OACPC,OAAQ,SAkBA,SACI,cAACiB,EAAD,CACIf,KAhBH,CACb,CAAEkB,IAAK,YAAahB,MAAO,KAC3B,CAAEgB,IAAK,OAAQhB,MAAO,KACtB,CAAEgB,IAAK,QAAShB,MAAO,KACvB,CAAEgB,IAAK,QAAShB,MAAO,KACvB,CAAEgB,IAAK,SAAUhB,MAAO,KACxB,CAAEgB,IAAK,UAAWhB,MAAO,KACzB,CAAEgB,IAAK,iBAAkBhB,MAAO,KAUhBJ,OAAQ,IACRQ,OAAQ,CAAEC,IAAK,GAAIG,MAAO,GAAID,OAAQ,GAAID,KAAM,cCoBzDW,EAhDI,WAEf,IAAMC,EAAY,CACd,CAAEnB,KAAM,QAASoB,GAAI,EAAGC,SAAU,GAAIC,WAAY,GAClD,CAAEtB,KAAM,UAAWoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACrD,CAAEtB,KAAM,WAAYoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACtD,CAAEtB,KAAM,UAAWoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,IACrD,CAAEtB,KAAM,YAAaoB,GAAI,EAAGC,SAAU,GAAIC,WAAY,GACtD,CAAEtB,KAAM,QAASoB,GAAI,EAAGC,SAAU,IAAKC,WAAY,KAGvD,OACI,cAAC9B,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,yBACA,qBAAKA,UAAU,kBAAf,SACI,cAAC,sBAAD,CACI6B,OAAQ,kBACJ,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UACI,cAAC,QAAD,CACI1B,KAAMoB,EACNtB,OAAQ,IACR6B,eAAgB,GAChBtB,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEN,YAAY,EACZ6B,0BAA0B,MAGlC,cAACF,EAAA,EAAD,UACI,cAAC,SAAD,CACI1B,KAAMoB,EACNtB,OAAQ,IACRD,MAAO,IACPgC,aAAc,IACdxB,YAAa,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WACrEC,OAAQ,CAAEC,IAAK,GAAIE,OAAQ,GAAID,KAAM,EAAGE,MAAO,sB,OC+GxEoB,EAnJG,WAgId,OACI,cAACrC,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,wBACA,qBAAKA,UAAU,iBAAiBC,MAlIhB,CACxBC,MAAO,QAiIC,SACI,cAAC,UAAD,CACIG,KAhHH,CACb+B,YAAa,CACT,CACIC,MAAO,IACPC,UAAW,gBACXC,MAAO,CACH,CACIC,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,0BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,4BAEd,CACID,KAAM,2BACNjC,MAAO,EACPkC,SAAU,gCAcVZ,OAjID,SAACa,GAAD,OACf,cAAC,sBAAD,CACIb,OAAQ,gBAAG3B,EAAH,EAAGA,MAAH,OACJ,cAAC,OAAD,aACIE,YAAY,EACZF,MAAOA,EACPyC,YAAa,GACbC,iBAAkB,IAClBC,KAAM,cACFH,QAyHAI,WAAW,SACXC,MAAM,cACNC,UAAW,OACXC,WAAY,kBC5FrBC,UAxCI,WACf,OACI,eAAC,IAAMC,SAAP,WACI,cAACC,EAAA,EAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,SAAUC,KAAM,0BACzB,CAAED,MAAO,QAASC,KAAM,yBAA0BC,QAAQ,IAE9DT,MAAO,iBAGX,eAACjB,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK0B,GAAI,EAAT,SACI,cAAC,EAAD,MAGJ,cAAC1B,EAAA,EAAD,CAAK0B,GAAI,EAAT,SACI,cAAC,EAAD,SAIR,eAAC3B,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAK0B,GAAI,EAAT,SACI,cAAC,EAAD,MAGJ,cAAC1B,EAAA,EAAD,CAAK0B,GAAI,EAAT,SACI,cAAC,EAAD,SAIR,cAAC3B,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAK0B,GAAI,EAAT,SACI,cAAC,EAAD,a,iCC7CpB,2CA8CeL,IA7BG,SAACV,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,sBAAK1C,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAYA,UAAU,MAAtB,UACI,cAAC,IAAW0D,KAAZ,CAAiBC,KAAK,IAAtB,mBAECjB,EAAMW,gBAAgBO,KAAI,SAACC,EAAMC,GAC9B,OAAOD,EAAKL,OACR,cAAC,IAAWE,KAAZ,CAAiBF,QAAM,EAAvB,SACKK,EAAKP,OADmBQ,GAI7B,cAAC,IAAWJ,KAAZ,CAA6BC,KAAME,EAAKN,KAAxC,SACKM,EAAKP,OADYQ,WAOtC,oBAAI9D,UAAU,aAAd,SAA4B0C,EAAMK","file":"static/js/122.54f462ba.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple bar chart\nconst BarChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    // chart data\n    const barChartData = [\n        { name: 'Mon', value: 2100 },\n        { name: 'Tue', value: 5000 },\n        { name: 'Wed', value: 4000 },\n        { name: 'Thu', value: 5500 },\n        { name: 'Fri', value: 6500 },\n        { name: 'Sat', value: 4500 },\n        { name: 'Sun', value: 3500 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Bar Chart</h4>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                    <ResponsiveBarChart\n                        isAnimated={false}\n                        data={barChartData}\n                        isHorizontal={false}\n                        height={300}\n                        betweenBarsPadding={0.5}\n                        colorSchema={['#39afd1']}\n                        margin={{ top: 10, left: 55, bottom: 20, right: 10 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Bar, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveBarChart = withResponsiveness(Bar);\n\n// simple horizontal bar chart\nconst HorizontalBarChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    // chart data\n    const barChartData = [\n        { name: 'Mon', value: 2100 },\n        { name: 'Tue', value: 5000 },\n        { name: 'Wed', value: 4000 },\n        { name: 'Thu', value: 5500 },\n        { name: 'Fri', value: 6500 },\n        { name: 'Sat', value: 4500 },\n        { name: 'Sun', value: 3500 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Horizontal Bar Chart</h4>\n                <div className=\"bar-container\" style={chartContainerStyle}>\n                    <ResponsiveBarChart\n                        data={barChartData}\n                        isHorizontal={true}\n                        height={300}\n                        enableLabels={true}\n                        percentageAxisToMaxRatio={1.3}\n                        labelsNumberFormat={1}\n                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1', '#e3eaef']}\n                        margin={{ top: 10, left: 50, bottom: 20, right: 10 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default HorizontalBarChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Step, withResponsiveness } from 'britecharts-react';\n\nconst ResponsiveStepChart = withResponsiveness(Step);\n\n// step chart\nconst StepChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n        height: '300px',\n    };\n\n    // chart data\n    const stepData = [\n        { key: 'Appetizer', value: 400 },\n        { key: 'Soup', value: 300 },\n        { key: 'Salad', value: 300 },\n        { key: 'Lunch', value: 250 },\n        { key: 'Dinner', value: 220 },\n        { key: 'Dessert', value: 100 },\n        { key: 'Midnight snack', value: 20 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Step Chart</h4>\n                <div className=\"step-container\" style={chartContainerStyle}>\n                    <ResponsiveStepChart\n                        data={stepData}\n                        height={300}\n                        margin={{ top: 40, right: 40, bottom: 80, left: 50 }}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StepChart;\n","// @flow\nimport React from 'react';\nimport { Card, Row, Col } from 'react-bootstrap';\nimport { Donut, Legend, ResponsiveContainer } from 'britecharts-react';\n\n// donut chart\nconst DonutChart = (): React$Element<any> => {\n    // chart data\n    const donutData = [\n        { name: 'Shiny', id: 1, quantity: 86, percentage: 5 },\n        { name: 'Blazing', id: 2, quantity: 300, percentage: 18 },\n        { name: 'Dazzling', id: 3, quantity: 276, percentage: 16 },\n        { name: 'Radiant', id: 4, quantity: 195, percentage: 11 },\n        { name: 'Sparkling', id: 5, quantity: 36, percentage: 2 },\n        { name: 'Other', id: 0, quantity: 814, percentage: 48 },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Donut Chart</h4>\n                <div className=\"donut-container\">\n                    <ResponsiveContainer\n                        render={() => (\n                            <Row>\n                                <Col>\n                                    <Donut\n                                        data={donutData}\n                                        height={300}\n                                        internalRadius={80}\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\n                                        isAnimated={false}\n                                        hasFixedHighlightedSlice={true}\n                                    />\n                                </Col>\n                                <Col>\n                                    <Legend\n                                        data={donutData}\n                                        height={200}\n                                        width={250}\n                                        numberFormat={'s'}\n                                        colorSchema={['#727cf5', '#0acf97', '#6c757d', '#fa5c7c', '#ffbc00', '#39afd1']}\n                                        margin={{ top: 10, bottom: 10, left: 0, right: 30 }}\n                                    />\n                                </Col>\n                            </Row>\n                        )}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","// @flow\nimport React from 'react';\nimport { Card } from 'react-bootstrap';\nimport { Line, Tooltip, ResponsiveContainer } from 'britecharts-react';\n\n// simple line chart\nconst LineChart = (): React$Element<any> => {\n    // container style\n    const chartContainerStyle = {\n        width: '100%',\n    };\n\n    const renderLine = (props) => (\n        <ResponsiveContainer\n            render={({ width }) => (\n                <Line\n                    isAnimated={false}\n                    width={width}\n                    aspectRatio={0.7}\n                    tooltipThreshold={100}\n                    grid={'horizontal'}\n                    {...props}\n                />\n            )}\n        />\n    );\n\n    // chart data\n    const lineData = {\n        dataByTopic: [\n            {\n                topic: 103,\n                topicName: 'San Francisco',\n                dates: [\n                    {\n                        date: '2018-06-27T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-06-27T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-28T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-06-28T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-29T07:00:00.000Z',\n                        value: 4,\n                        fullDate: '2018-06-29T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-06-30T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-06-30T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-01T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-01T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-02T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-02T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-03T07:00:00.000Z',\n                        value: 0,\n                        fullDate: '2018-07-03T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-04T07:00:00.000Z',\n                        value: 3,\n                        fullDate: '2018-07-04T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-05T07:00:00.000',\n                        value: 1,\n                        fullDate: '2018-07-05T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-06T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-06T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-07T07:00:00.000Z',\n                        value: 0,\n                        fullDate: '2018-07-07T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-08T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-08T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-09T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-07-09T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-10T07:00:00.000Z',\n                        value: 4,\n                        fullDate: '2018-07-10T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-11T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-11T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-12T07:00:00.000Z',\n                        value: 1,\n                        fullDate: '2018-07-12T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-13T07:00:00.000Z',\n                        value: 6,\n                        fullDate: '2018-07-13T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-14T07:00:00.000Z',\n                        value: 5,\n                        fullDate: '2018-07-14T07:00:00.000Z',\n                    },\n                    {\n                        date: '2018-07-15T07:00:00.000Z',\n                        value: 2,\n                        fullDate: '2018-07-15T07:00:00.000Z',\n                    },\n                ],\n            },\n        ],\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-4\">Line Chart</h4>\n                <div className=\"line-container\" style={chartContainerStyle}>\n                    <Tooltip\n                        data={lineData}\n                        render={renderLine}\n                        topicLabel=\"topics\"\n                        title=\"Sample Data\"\n                        dateLabel={'date'}\n                        valueLabel={'value'}\n                    />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../../components/PageTitle';\n\nimport BarChart from './BarChart';\nimport HorizontalBarChart from './HorizontalBarChart';\nimport StepChart from './StepChart';\nimport DonutChart from './DonutChart';\nimport LineChart from './LineChart';\n\nconst BriteChart = (): React$Element<React$FragmentType> => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Charts', path: '/features/charts/brite' },\n                    { label: 'Brite', path: '/features/charts/brite', active: true },\n                ]}\n                title={'Brite Charts'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n\n                <Col xl={6}>\n                    <HorizontalBarChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StepChart />\n                </Col>\n\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default BriteChart;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}