{"version":3,"sources":["pages/maps/GoogleMaps.js","components/PageTitle.js"],"names":["BasicMap","props","Body","className","style","position","overflow","google","zoom","initialCenter","lat","lng","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","MapWithMarker","title","name","StreetViewMap","mapRef","map","ref","streetViewControl","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","GoogleApiWrapper","apiKey","Fragment","breadCrumbItems","label","path","active","xl","PageTitle","Item","href","item","index"],"mappings":"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","file":"static/js/125.49afe80e.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper } from 'google-maps-react';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst BasicMap = (props) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Basic Google Map</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst MapWithMarker = (props) => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Google Map with Marker</h4>\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={18}\n                        initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}>\n                        <Marker\n                            title={'This is sweet home.'}\n                            name={'Home sweet home!'}\n                            position={{ lat: 21.569874, lng: 71.5893798 }}></Marker>\n                    </Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst StreetViewMap = (props) => {\n    let mapRef = { map: {} };\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        ref={(map) => (mapRef = map)}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        streetViewControl={true}\n                        onReady={() => {\n                            activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst LightStyledMap = (props) => {\n    const mapStyles = [\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#e9e9e9' }, { lightness: 17 }] },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 20 }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 18 }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#ffffff' }, { lightness: 16 }] },\n        { featureType: 'poi', elementType: 'geometry', stylers: [{ color: '#f5f5f5' }, { lightness: 21 }] },\n        { featureType: 'poi.park', elementType: 'geometry', stylers: [{ color: '#dedede' }, { lightness: 21 }] },\n        { elementType: 'labels.text.stroke', stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }] },\n        { elementType: 'labels.text.fill', stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }] },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#f2f2f2' }, { lightness: 19 }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Ultra Light with Labels</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DarkStyledMap = (props) => {\n    const mapStyles = [\n        { featureType: 'all', elementType: 'labels', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        { featureType: 'all', elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        { featureType: 'administrative.country', elementType: 'labels.text.fill', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'administrative.locality', elementType: 'labels.text.fill', stylers: [{ color: '#c4c4c4' }] },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        { featureType: 'landscape', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 20 }] },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        { featureType: 'poi.business', elementType: 'geometry', stylers: [{ visibility: 'on' }] },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        { featureType: 'road.highway', elementType: 'geometry.stroke', stylers: [{ visibility: 'off' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.highway', elementType: 'labels.text.stroke', stylers: [{ color: '#e5c163' }] },\n        { featureType: 'road.arterial', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 18 }] },\n        { featureType: 'road.arterial', elementType: 'geometry.fill', stylers: [{ color: '#575757' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.fill', stylers: [{ color: '#ffffff' }] },\n        { featureType: 'road.arterial', elementType: 'labels.text.stroke', stylers: [{ color: '#2c2c2c' }] },\n        { featureType: 'road.local', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 16 }] },\n        { featureType: 'road.local', elementType: 'labels.text.fill', stylers: [{ color: '#999999' }] },\n        { featureType: 'transit', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 19 }] },\n        { featureType: 'water', elementType: 'geometry', stylers: [{ color: '#000000' }, { lightness: 17 }] },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Dark</h4>\n\n                <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                    <Map\n                        google={props.google}\n                        zoom={14}\n                        initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                        style={{ width: '100%', height: '100%', position: 'relative' }}\n                        styles={mapStyles}\n                        zoomControlOptions={{\n                            position: props.google.maps.ControlPosition.LEFT_TOP,\n                        }}></Map>\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst GoogleMaps = (props) => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/googlemaps' },\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BasicMap google={props.google} />\n                </Col>\n\n                <Col xl={6}>\n                    <MapWithMarker google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StreetViewMap google={props.google} />\n                </Col>\n\n                <Col xl={6}>\n                    <LightStyledMap google={props.google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <DarkStyledMap google={props.google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default (GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps): any);\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}