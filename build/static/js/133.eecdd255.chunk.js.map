{"version":3,"sources":["pages/uikit/Tabs.js","components/PageTitle.js"],"names":["TabsExample","tabContents","id","title","icon","text","Fragment","breadCrumbItems","label","path","active","lg","Body","className","Container","defaultActiveKey","variant","map","tab","index","Item","Link","href","eventKey","classnames","Content","Pane","sm","justify","as","PageTitle","props","item"],"mappings":"qHACA,yGAoVeA,UA7UK,WAChB,IAAMC,EAAc,CAChB,CACIC,GAAI,IACJC,MAAO,OACPC,KAAM,uBACNC,KAAM,sTAEV,CACIH,GAAI,IACJC,MAAO,UACPC,KAAM,yBACNC,KAAM,yTAEV,CACIH,GAAI,IACJC,MAAO,WACPC,KAAM,sBACNC,KAAM,2TAId,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,UAAWC,KAAM,YAC1B,CAAED,MAAO,OAAQC,KAAM,WAAYC,QAAQ,IAE/CP,MAAO,SAGX,eAAC,IAAD,WACI,cAAC,IAAD,CAAKQ,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,0BACA,mBAAGA,UAAU,0BAAb,+DAEA,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKC,QAAQ,OAAb,SACKf,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,UACI,eAAC,IAAIC,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,QAgB3B,cAAC,IAAIM,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,kBAgB5E,cAAC,IAAD,CAAKR,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,4BACA,oBAAGA,UAAU,0BAAb,8DACqD,2CADrD,OAIA,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKC,QAAQ,QAAQY,SAAO,EAA5B,SACK3B,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,UACI,eAAC,IAAIC,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,QAgB3B,cAAC,IAAIM,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,qBAiBhF,eAAC,IAAD,WACI,cAAC,IAAD,CAAKR,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,gCACA,oBAAGA,UAAU,0BAAb,uFAC+E,IAC3E,gDAFJ,eAKA,cAAC,IAAD,UACI,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKY,GAAI,EAAGd,UAAU,eAAtB,SACI,cAAC,IAAD,CAAKG,QAAQ,QAAQH,UAAU,cAA/B,SACKZ,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,UACI,eAAC,IAAIC,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,UAiB/B,cAAC,IAAD,CAAKQ,GAAI,EAAT,SACI,cAAC,IAAIF,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,sBAiBpF,cAAC,IAAD,CAAKR,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,iCACA,oBAAGA,UAAU,0BAAb,uFAC+E,IAC3E,gDAFJ,eAKA,cAAC,IAAD,UACI,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKY,GAAI,EAAT,SACI,cAAC,IAAIF,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,UAWhE,cAAC,IAAD,CAAKQ,GAAI,EAAGd,UAAU,eAAtB,SACI,cAAC,IAAD,CAAKG,QAAQ,QAAQH,UAAU,cAA/B,SACKZ,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,UACI,eAAC,IAAIC,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,yBAwBvD,eAAC,IAAD,WACI,cAAC,IAAD,CAAKR,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,2BACA,oBAAGA,UAAU,0BAAb,gGACwF,IACpF,iDAFJ,OAKA,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKC,QAAQ,OAAOH,UAAU,eAAegB,GAAG,KAAhD,SACK5B,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,CAAsBS,GAAG,KAAzB,SACI,eAAC,IAAIR,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,QAgB3B,cAAC,IAAIM,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,kBAgB5E,cAAC,IAAD,CAAKR,GAAI,EAAT,SACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,oBAAd,qCACA,mBAAGA,UAAU,0BAAb,4EAIA,eAAC,IAAIC,UAAL,CAAeC,iBAAiB,UAAhC,UACI,cAAC,IAAD,CAAKC,QAAQ,OAAOY,SAAO,EAACf,UAAU,eAAegB,GAAG,KAAxD,SACK5B,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIC,KAAL,CAAsBS,GAAG,KAAzB,SACI,eAAC,IAAIR,KAAL,CAAUC,KAAK,IAAIC,SAAUL,EAAIf,MAAjC,UACI,mBACIU,UAAWW,IACPN,EAAId,KACJ,YACA,UACA,UAER,sBAAMS,UAAU,oBAAhB,SAAqCK,EAAIf,YATlCgB,QAgB3B,cAAC,IAAIM,QAAL,UACKxB,EAAYgB,KAAI,SAACC,EAAKC,GACnB,OACI,cAAC,IAAIO,KAAL,CAAUH,SAAUL,EAAIf,MAAOD,GAAIgB,EAAIhB,GAAvC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAKyB,GAAG,KAAR,SACI,mBAAGd,UAAU,OAAb,SAAqBK,EAAIb,YAHWc,0B,iCCjU5F,2CA8CeW,IA7BG,SAACC,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,sBAAKlB,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAYA,UAAU,MAAtB,UACI,cAAC,IAAWO,KAAZ,CAAiBE,KAAK,IAAtB,mBAECS,EAAMxB,gBAAgBU,KAAI,SAACe,EAAMb,GAC9B,OAAOa,EAAKtB,OACR,cAAC,IAAWU,KAAZ,CAAiBV,QAAM,EAAvB,SACKsB,EAAKxB,OADmBW,GAI7B,cAAC,IAAWC,KAAZ,CAA6BE,KAAMU,EAAKvB,KAAxC,SACKuB,EAAKxB,OADYW,WAOtC,oBAAIN,UAAU,aAAd,SAA4BkB,EAAM5B","file":"static/js/133.eecdd255.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, Tab, Nav } from 'react-bootstrap';\nimport classnames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst TabsExample = (): React$Element<React$FragmentType> => {\n    const tabContents = [\n        {\n            id: '1',\n            title: 'Home',\n            icon: 'mdi mdi-home-variant',\n            text: 'Home - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '2',\n            title: 'Profile',\n            icon: 'mdi mdi-account-circle',\n            text: 'Profile - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n        {\n            id: '3',\n            title: 'Settings',\n            icon: 'mdi mdi-cog-outline',\n            text: 'Settings - Food truck quinoa dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim.',\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/tabs' },\n                    { label: 'Tabs', path: '/ui/tabs', active: true },\n                ]}\n                title={'Tabs'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Default Tabs</h4>\n                            <p className=\"text-muted font-14 mb-3\">Simple widget of tabbable panes of local content.</p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                If you want each NavItem to be the same size use <code>justify</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"pills\" justify>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index}>\n                                                <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* vertical tab */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Left</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Vertical Right</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                You can stack your navigation by changing the flex item direction with the{' '}\n                                <code>.flex-column</code> utility.\n                            </p>\n\n                            <Row>\n                                <Tab.Container defaultActiveKey=\"Profile\">\n                                    <Col sm={9}>\n                                        <Tab.Content>\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                        <Row>\n                                                            <Col sm=\"12\">\n                                                                <p className=\"mt-3\">{tab.text}</p>\n                                                            </Col>\n                                                        </Row>\n                                                    </Tab.Pane>\n                                                );\n                                            })}\n                                        </Tab.Content>\n                                    </Col>\n                                    <Col sm={3} className=\"mb-2 mb-sm-0\">\n                                        <Nav variant=\"pills\" className=\"flex-column\">\n                                            {tabContents.map((tab, index) => {\n                                                return (\n                                                    <Nav.Item key={index}>\n                                                        <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                            <i\n                                                                className={classnames(\n                                                                    tab.icon,\n                                                                    'd-md-none',\n                                                                    'd-block',\n                                                                    'me-1'\n                                                                )}></i>\n                                                            <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                        </Nav.Link>\n                                                    </Nav.Item>\n                                                );\n                                            })}\n                                        </Nav>\n                                    </Col>\n                                </Tab.Container>\n                            </Row>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            {/* Bordered Tabs */}\n            <Row>\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item can have a simple bottom border as well. Just specify the class{' '}\n                                <code>.nav-bordered</code>.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n\n                {/* tab justified */}\n                <Col lg={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title mb-3\">Tabs Bordered Justified</h4>\n                            <p className=\"text-muted font-14 mb-3\">\n                                The navigation item with a simple bottom border and justified.\n                            </p>\n\n                            <Tab.Container defaultActiveKey=\"Profile\">\n                                <Nav variant=\"tabs\" justify className=\"nav-bordered\" as=\"ul\">\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Nav.Item key={index} as=\"li\">\n                                                <Nav.Link href=\"#\" eventKey={tab.title}>\n                                                    <i\n                                                        className={classnames(\n                                                            tab.icon,\n                                                            'd-md-none',\n                                                            'd-block',\n                                                            'me-1'\n                                                        )}></i>\n                                                    <span className=\"d-none d-md-block\">{tab.title}</span>\n                                                </Nav.Link>\n                                            </Nav.Item>\n                                        );\n                                    })}\n                                </Nav>\n\n                                <Tab.Content>\n                                    {tabContents.map((tab, index) => {\n                                        return (\n                                            <Tab.Pane eventKey={tab.title} id={tab.id} key={index}>\n                                                <Row>\n                                                    <Col sm=\"12\">\n                                                        <p className=\"mt-3\">{tab.text}</p>\n                                                    </Col>\n                                                </Row>\n                                            </Tab.Pane>\n                                        );\n                                    })}\n                                </Tab.Content>\n                            </Tab.Container>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default TabsExample;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}