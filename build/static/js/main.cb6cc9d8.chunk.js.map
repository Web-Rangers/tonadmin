{"version":3,"sources":["redux/layout/constants.js","i18n.js","constants/layout.js","layouts/Default.js","layouts/Vertical.js","routes/PrivateRoute.js","routes/index.js","routes/Routes.js","App.js","redux/auth/reducers.js","redux/layout/reducers.js","redux/reducers.js","helpers/api/auth.js","redux/auth/saga.js","redux/layout/saga.js","redux/sagas.js","redux/store.js","index.js","redux/auth/actions.js","helpers/api/apiCore.js","redux/layout/actions.js","config.js","redux/actions.js","redux/auth/constants.js"],"names":["LayoutActionTypes","CHANGE_LAYOUT","CHANGE_LAYOUT_WIDTH","CHANGE_SIDEBAR_THEME","CHANGE_SIDEBAR_TYPE","TOGGLE_RIGHT_SIDEBAR","SHOW_RIGHT_SIDEBAR","HIDE_RIGHT_SIDEBAR","resources","es","translation","i18n","use","detector","initReactI18next","init","lng","fallbackLng","keySeparator","interpolation","escapeValue","LAYOUT_VERTICAL","LAYOUT_WIDTH_FLUID","LEFT_SIDEBAR_THEME_DEFAULT","LEFT_SIDEBAR_THEME_DARK","LEFT_SIDEBAR_TYPE_FIXED","LEFT_SIDEBAR_TYPE_CONDENSED","DefaultLayout","props","useEffect","document","body","classList","add","remove","children","fallback","className","Topbar","React","lazy","LeftSidebar","Footer","loading","VerticalLayout","state","dispatch","useDispatch","useSelector","layoutWidth","Layout","leftSideBarTheme","leftSideBarType","showRightSidebar","useState","isMenuOpened","setIsMenuOpened","updateDimensions","useCallback","window","innerWidth","changeSidebarType","layoutConstants","changeSidebarTheme","addEventListener","removeEventListener","isCondensed","isLight","hideUserProfile","openLeftMenuCallBack","prevState","hideLogo","Container","fluid","PrivateRoute","Component","component","rest","roles","api","APICore","render","isUserAuthenticated","to","pathname","from","location","getLoggedInUser","Login","Logout","Register","ForgetPassword","LockScreen","MinerDashboard","ValidatorDashboard","ValidatorsList","UpdateCenter","TwoFa","HashRate","BleedRate","Machines","StatusPage","Landing","Metrics","Info","rootRoute","path","exact","route","Route","dashboardRoutes","name","icon","header","ValidatorsListRoute","UpdateCenterRoute","TwoFaRoute","flattenRoutes","routes","flatRoutes","forEach","item","push","authRoutes","analyticRoutes","commonRoutes","authProtectedRoutes","publicRoutes","authProtectedFlattenRoutes","publicProtectedFlattenRoutes","commonProtectedFlattenRoutes","Routes","layout","user","Auth","map","r","Vertical","index","Default","App","INIT_STATE","action","type","AuthActionTypes","API_RESPONSE_SUCCESS","payload","actionType","LOGIN_USER","data","userLoggedIn","SIGNUP_USER","userSignUp","LOGOUT_USER","userLogout","FORGOT_PASSWORD","resetPasswordSuccess","passwordReset","FORGOT_PASSWORD_CHANGE","passwordChange","API_RESPONSE_ERROR","error","registerError","RESET","layoutType","combineReducers","login","params","sendAuth","logout","sendJRPC","signup","forgotPassword","forgotPasswordConfirm","forgotPasswordChange","watchLoginUser","watchLogout","watchSignup","watchForgotPassword","watchForgotPasswordChange","authSaga","apiURL","password","token","code","response","call","loginApi","result","setLoggedInUser","setAuthorization","put","authApiResponseSuccess","authApiResponseError","toString","logoutApi","fullname","email","signupApi","username","forgotPasswordApi","takeEvery","all","fork","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","setAttribute","manageBodyClass","cssClass","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","changeLayoutWidthAction","width","theme","rootSaga","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","createStore","reducers","applyMiddleware","run","configureStore","getElementById","loginUser","logoutUser","signupUser","resetAuth","axios","defaults","headers","post","interceptors","message","status","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","dismissable","click","localStorage","removeItem","AUTH_SESSION_KEY","href","Promise","reject","errorMessage","common","getUserFromSession","getItem","JSON","parse","get","url","queryString","Object","keys","key","join","URL","transformRequest","getFile","responseType","getMultiple","urls","reqs","create","httpsAgent","https","Agent","rejectUnauthorized","config","SERVER_URL","stringify","jsonrpc","id","method","updatePatch","patch","update","delete","createWithFile","formData","FormData","k","append","updateWithFile","session","setItem","baseURL","setUserInSession","modifiedUser","userInfo","removeSession","sidebarType","dotenv","API_URL","process","NODE_URL"],"mappings":"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","file":"static/js/main.cb6cc9d8.chunk.js","sourcesContent":["export const LayoutActionTypes = {\n    CHANGE_LAYOUT: '@@layout/CHANGE_LAYOUT',\n    CHANGE_LAYOUT_WIDTH: '@@layout/CHANGE_LAYOUT_WIDTH',\n    CHANGE_SIDEBAR_THEME: '@@layout/CHANGE_SIDEBAR_THEME',\n    CHANGE_SIDEBAR_TYPE: '@@layout/CHANGE_SIDEBAR_TYPE',\n\n    TOGGLE_RIGHT_SIDEBAR: '@@layout/TOGGLE_RIGHT_SIDEBAR',\n    SHOW_RIGHT_SIDEBAR: '@@layout/SHOW_RIGHT_SIDEBAR',\n    HIDE_RIGHT_SIDEBAR: '@@layout/HIDE_RIGHT_SIDEBAR'\n};\n","import i18n from 'i18next';\nimport detector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nimport translationEs from './locales/es/translation.json';\n//translations\nconst resources = {\n    es: {\n        translation: translationEs,\n    },\n};\n\ni18n.use(detector)\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: 'en',\n        fallbackLng: 'en', // use en if detected lng is not available\n\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false, // react already safes from xss\n        },\n    });\n\nexport default i18n;\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\nexport const LAYOUT_DETACHED = 'detached';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_LIGHT = 'light';\nexport const LEFT_SIDEBAR_THEME_DARK = 'light';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';\n","// @flow\nimport React, { useEffect, Suspense } from 'react';\n\nconst loading = () => <div className=\"\"></div>;\n\ntype DefaultLayoutProps = {\n    layout: {\n        layoutType: string,\n        layoutWidth: string,\n        leftSideBarTheme: string,\n        leftSideBarType: string,\n        showRightSidebar: boolean,\n    },\n    user: any,\n    children?: any,\n};\n\nconst DefaultLayout = (props: DefaultLayoutProps): React$Element<any> => {\n    useEffect(() => {\n        if (document.body) document.body.classList.add('authentication-bg');\n\n        return () => {\n            if (document.body) document.body.classList.remove('authentication-bg');\n        };\n    }, []);\n\n    // get the child view which we would like to render\n    const children = props.children || null;\n\n    return (\n        <>\n            <Suspense fallback={loading()}>{children}</Suspense>\n        </>\n    );\n};\nexport default DefaultLayout;\n","// @flow\nimport React, { Suspense, useCallback, useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container } from 'react-bootstrap';\n\n// actions\nimport { changeSidebarType, changeSidebarTheme } from '../redux/actions';\n\nimport * as layoutConstants from '../constants/layout';\n\n\n// code splitting and lazy loading\n// https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst Topbar = React.lazy(() => import('./Topbar'));\nconst LeftSidebar = React.lazy(() => import('./LeftSidebar'));\nconst Footer = React.lazy(() => import('./Footer'));\n\nconst loading = () => <div className=\"\"></div>;\n\ntype VerticalLayoutProps = {\n    children?: any,\n};\n\ntype VerticalLayoutState = {\n    isMenuOpened?: boolean,\n};\n\nconst VerticalLayout = ({ children }: VerticalLayoutProps, state: VerticalLayoutState): React$Element<any> => {\n    const dispatch = useDispatch();\n\n    const { leftSideBarTheme, leftSideBarType } = useSelector((state) => ({\n        layoutWidth: state.Layout.layoutWidth,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showRightSidebar: state.Layout.showRightSidebar,\n    }));\n\n    const [isMenuOpened, setIsMenuOpened] = useState(false);\n\n    /**\n     * Open the menu when having mobile screen\n     */\n    const openMenu = () => {\n        setIsMenuOpened((prevState) => {\n            setIsMenuOpened(!prevState);\n        });\n\n        if (document.body) {\n            if (isMenuOpened) {\n                document.body.classList.remove('sidebar-enable');\n            } else {\n                document.body.classList.add('sidebar-enable');\n            }\n        }\n    };\n\n    const updateDimensions = useCallback(() => {\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        } else if (window.innerWidth > 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n    }, [dispatch]);\n\n    useEffect(() => {\n        dispatch(changeSidebarTheme(layoutConstants.LEFT_SIDEBAR_THEME_DARK));\n\n        // activate the condensed sidebar if smaller devices like ipad or tablet\n        if (window.innerWidth >= 768 && window.innerWidth <= 1028) {\n            dispatch(changeSidebarType(layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED));\n        }\n\n        window.addEventListener('resize', updateDimensions);\n\n        return () => {\n            window.removeEventListener('resize', updateDimensions);\n        };\n    }, [dispatch, updateDimensions]);\n\n    const isCondensed = leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED;\n    const isLight = leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT;\n\n    return (\n        <>\n            <div className=\"wrapper\">\n                <Suspense fallback={loading()}>\n                    <LeftSidebar isCondensed={isCondensed} isLight={isLight} hideUserProfile={true} />\n                </Suspense>\n                <div className=\"content-page\">\n\n                    <div className=\"content\">\n                      <Suspense className=\"hidden-xl\" fallback={loading()}>\n                          <Topbar openLeftMenuCallBack={openMenu} hideLogo={true} />\n                      </Suspense>\n                        <Container fluid>\n                            <Suspense fallback={loading()}>{children}</Suspense>\n                        </Container>\n                    </div>\n\n                    <Suspense fallback={loading()}>\n                        <Footer />\n                    </Suspense>\n                </div>\n            </div>\n\n        </>\n    );\n};\nexport default VerticalLayout;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { APICore } from '../helpers/api/apiCore';\n\n/**\n * Private Route forces the authorization before the route can be accessed\n * @param {*} param0\n * @returns\n */\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\n    const api = new APICore();\n\n    return (\n        <Route\n            {...rest}\n            render={(props) => {\n                if (api.isUserAuthenticated() === false) {\n                    // not logged in so redirect to login page with the return url\n                    return <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n                }\n\n                const loggedInUser = api.getLoggedInUser();\n\n              // check if route is restricted by role\n              /*  if (roles && roles.indexOf(loggedInUser.role) === -1) {\n                    // role not authorised so redirect to home page\n                    return <Redirect to={{ pathname: '/' }} />;\n                }*/\n                // authorised so return component\n                return <Component {...props} />;\n            }}\n        />\n    );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\n\nimport PrivateRoute from './PrivateRoute';\n\n// lazy load all the views\n\n// auth\nconst Login = React.lazy(() => import('../pages/account/Login'));\nconst Logout = React.lazy(() => import('../pages/account/Logout'));\nconst Register = React.lazy(() => import('../pages/account/Register'));\nconst Confirm = React.lazy(() => import('../pages/account/Confirm'));\nconst ForgetPassword = React.lazy(() => import('../pages/account/ForgetPassword'));\nconst LockScreen = React.lazy(() => import('../pages/account/LockScreen'));\n\n// dashboard\n\nconst MinerDashboard = React.lazy(() => import('../pages/dashboard/Miner'));\nconst ValidatorDashboard = React.lazy(() => import('../pages/dashboard/Validator'));\nconst ValidatorsList = React.lazy(() => import('../pages/ValidatorsList'));\nconst UpdateCenter = React.lazy(() => import('../pages/UpdateCenter'));\nconst TwoFa = React.lazy(() => import('../pages/TwoFa'));\n\nconst HashRate = React.lazy(() => import('../pages/analytics/HashRate'));\nconst BleedRate = React.lazy(() => import('../pages/analytics/BleedRate'));\nconst Machines = React.lazy(() => import('../pages/analytics/Machines'));\n\n//public pages\nconst StatusPage = React.lazy(() => import('../pages/StatusPage'));\nconst Landing = React.lazy(() => import('../pages/landing'));\nconst Metrics = React.lazy(() => import('../pages/metrics/index'));\nconst Info = React.lazy(() => import('../pages/metrics/info'));\n\n\n// app\n// root routes\nconst rootRoute = {\n    path: '/',\n    exact: true,\n    component: () => <Redirect to=\"/dashboard/validator\" />,\n  route: Route,\n};\n\n// dashboards\nconst dashboardRoutes = {\n    path: '/dashboard',\n    name: 'Dashboards',\n    icon: 'uil-home-alt',\n    header: 'Navigation',\n    children: [\n        {\n            path: '/dashboard/validator',\n            name: 'Validator',\n            component: ValidatorDashboard,\n            route: PrivateRoute,\n        },\n        {\n            path: '/dashboard/miner',\n            name: 'Miner',\n            component: MinerDashboard,\n            route: PrivateRoute,\n        }\n    ],\n};\n\nconst ValidatorsListRoute = {\n    path: '/validators',\n    name: 'Validators',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-list',\n    component: ValidatorsList\n};\n\nconst UpdateCenterRoute = {\n    path: '/updates',\n    name: 'Update Center',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-download',\n    component: UpdateCenter\n};\n\nconst TwoFaRoute = {\n    path: '/2fa',\n    name: '2fa auth',\n    route: PrivateRoute,\n    roles: ['Admin'],\n    icon: 'uil-download',\n    component: TwoFa\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = (routes) => {\n    let flatRoutes = [];\n\n    routes = routes || [];\n    routes.forEach((item) => {\n        flatRoutes.push(item);\n\n        if (typeof item.children !== 'undefined') {\n            flatRoutes = [...flatRoutes, ...flattenRoutes(item.children)];\n        }\n    });\n    return flatRoutes;\n};\n\n// auth\nconst authRoutes = [\n    {\n        path: '/account/login',\n        name: 'Login',\n        component: Login,\n        route: Route,\n    },\n    {\n        path: '/account/logout',\n        name: 'Logout',\n        component: Logout,\n        route: Route,\n    },\n    {\n        path: '/account/register',\n        name: 'Register',\n        component: Register,\n        route: Route,\n    },\n    {\n        path: '/account/forget-password',\n        name: 'Forget Password',\n        component: ForgetPassword,\n        route: Route,\n    },\n    {\n        path: '/account/lock-screen',\n        name: 'Lock Screen',\n        component: LockScreen,\n        route: Route,\n    }\n];\nconst analyticRoutes = [\n    {\n        path: '/analytics/hashrate',\n        name: 'HashRate',\n        component: HashRate,\n        route: Route,\n    },\n    {\n        path: '/analytics/bleedrate',\n        name: 'BleedRate',\n        component: BleedRate,\n        route: Route,\n    },\n    {\n        path: '/analytics/machines',\n        name: 'Hash Rate vs Hardware',\n        component: Machines,\n        route: Route,\n    }\n]\n\nconst commonRoutes = [\n    {\n        path: '/status',\n        name: 'Status of TON network',\n        component: StatusPage,\n        route: Route,\n    },\n    {\n        path: '/landing',\n        name: 'Landing',\n        component: Landing,\n        route: Route,\n    },\n    {\n        path: '/metrics/view',\n        name: 'Metrics',\n        component: Metrics,\n        route: Route,\n    },\n    {\n        path: '/metrics/info/:address',\n        name: 'Info',\n        component: Info,\n        route: Route,\n    },\n]\n\n// All routes\nconst authProtectedRoutes = [rootRoute, dashboardRoutes, UpdateCenterRoute, TwoFaRoute, ValidatorsListRoute];\nconst publicRoutes = [...authRoutes, ...analyticRoutes, ...commonRoutes];\n\nconst authProtectedFlattenRoutes = flattenRoutes([...authProtectedRoutes]);\nconst publicProtectedFlattenRoutes = flattenRoutes([...publicRoutes]);\nconst commonProtectedFlattenRoutes = flattenRoutes([...commonRoutes]);\n\nexport { publicRoutes, authProtectedRoutes, authProtectedFlattenRoutes, publicProtectedFlattenRoutes, commonProtectedFlattenRoutes };\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport * as layoutConstants from '../constants/layout';\n\n// All layouts/containers\nimport DefaultLayout from '../layouts/Default';\nimport VerticalLayout from '../layouts/Vertical';\n\nimport { authProtectedFlattenRoutes, publicProtectedFlattenRoutes, commonProtectedFlattenRoutes } from './index';\n\nconst Routes = (props) => {\n    const { layout, user } = useSelector((state) => ({\n        layout: state.Layout,\n        user: state.Auth.user,\n    }));\n\n\n    return (\n        <BrowserRouter>\n            <Switch>\n                <Route path={commonProtectedFlattenRoutes.map((r) => r['path'])}>\n                    <VerticalLayout {...props} layout={layout}>\n                        <Switch>\n                            {commonProtectedFlattenRoutes.map((route, index) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </VerticalLayout>\n                </Route>\n\n                <Route path={publicProtectedFlattenRoutes.map((r) => r['path'])}>\n                    <DefaultLayout {...props} layout={layout}>\n                        <Switch>\n                            {publicProtectedFlattenRoutes.map((route, index) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </DefaultLayout>\n                </Route>\n\n                <Route path={authProtectedFlattenRoutes.map((r) => r['path'])}>\n                    <VerticalLayout {...props} layout={layout} user={user}>\n                        <Switch>\n                            {authProtectedFlattenRoutes.map((route, index) => {\n                                return (\n                                    !route.children && (\n                                        <route.route\n                                            key={index}\n                                            path={route.path}\n                                            roles={route.roles}\n                                            exact={route.exact}\n                                            component={route.component}\n                                        />\n                                    )\n                                );\n                            })}\n                        </Switch>\n                    </VerticalLayout>\n                </Route>\n            </Switch>\n        </BrowserRouter>\n    );\n};\n\nexport default Routes;\n","// @flow\nimport React from 'react';\nimport Routes from './routes/Routes';\nimport dotenvConfig from './config.js';\n\n\n// Themes\n\n// For Saas import Saas.scss\nimport './assets/scss/Modern.scss';\nimport \"react-notifications-component/dist/theme.css\";\n// For Dark import Saas-Dark.scss\n// import './assets/scss/Saas-Dark.scss';\n\n// For Modern demo import Modern.scss\n// import './assets/scss/Modern.scss';\n// For Modern dark demo import Modern-Dark.scss\n// import './assets/scss/Modern-Dark.scss';\n\n// For Creative demo import Creative.scss\n// import './assets/scss/Creative.scss';\n// For Creative dark demo import Creative-Dark.scss\n// import './assets/scss/Creative-Dark.scss';\n\n// configure fake backend\n\n\ntype AppProps = {};\n\n/**\n * Main app component\n */\nconst App = (props: AppProps): React$Element<any> => {\n    return <Routes></Routes>;\n};\n\nexport default App;\n","// @flow\n\nimport { AuthActionTypes } from './constants';\n\nimport { APICore } from '../../helpers/api/apiCore';\n\nconst api = new APICore();\n\nconst INIT_STATE = {\n    user: api.getLoggedInUser(),\n    loading: false,\n};\n\ntype AuthAction = { type: string, payload: { actionType?: string, data?: any, error?: string } };\ntype State = { user?: {} | null, loading?: boolean, +value?: boolean };\n\nconst Auth = (state: State = INIT_STATE, action: AuthAction): any => {\n\n    switch (action.type) {\n        case AuthActionTypes.API_RESPONSE_SUCCESS:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        user: action.payload.data,\n                        userLoggedIn: true,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        loading: false,\n                        userSignUp: true,\n                    };\n                }\n                case AuthActionTypes.LOGOUT_USER: {\n                    return {\n                        ...state,\n                        user: null,\n                        loading: false,\n                        userLogout: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        resetPasswordSuccess: action.payload.data,\n                        loading: false,\n                        passwordReset: true,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        loading: false,\n                        passwordChange: true,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.API_RESPONSE_ERROR:\n            switch (action.payload.actionType) {\n                case AuthActionTypes.LOGIN_USER: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        userLoggedIn: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.SIGNUP_USER: {\n                    return {\n                        ...state,\n                        registerError: action.payload.error,\n                        userSignUp: false,\n                        loading: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordReset: false,\n                    };\n                }\n                case AuthActionTypes.FORGOT_PASSWORD_CHANGE: {\n                    return {\n                        ...state,\n                        error: action.payload.error,\n                        loading: false,\n                        passwordChange: false,\n                    };\n                }\n                default:\n                    return { ...state };\n            }\n\n        case AuthActionTypes.LOGIN_USER:\n            return { ...state, loading: true, userLoggedIn: false };\n        case AuthActionTypes.LOGOUT_USER:\n            return { ...state, loading: true, userLogout: false };\n        case AuthActionTypes.SIGNUP_USER:\n            return { ...state, loading: true, userSignUp: false };\n        case AuthActionTypes.FORGOT_PASSWORD:\n            return { ...state, loading: true, passwordReset: false };\n        case AuthActionTypes.FORGOT_PASSWORD_CHANGE:\n            return { ...state, loading: true, passwordChange: false };\n        case AuthActionTypes.RESET:\n            return {\n                ...state,\n                loading: false,\n                error: false,\n                userSignUp: false,\n                userLoggedIn: false,\n                passwordReset: false,\n                passwordChange: false,\n                resetPasswordSuccess: null,\n            };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","// @flow\nimport { LayoutActionTypes } from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DARK,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\ntype LayoutAction = { type: string, payload?: string | null };\n\ntype State = { showRightSidebar?: boolean, +value?: boolean };\n\nconst Layout = (state: State = INIT_STATE, action: LayoutAction): any => {\n    switch (action.type) {\n        case LayoutActionTypes.CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case LayoutActionTypes.CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case LayoutActionTypes.TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case LayoutActionTypes.SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case LayoutActionTypes.HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","// @flow\nimport { combineReducers } from 'redux';\n\nimport Auth from './auth/reducers';\nimport Layout from './layout/reducers';\n\nexport default (combineReducers({\n    Auth,\n    Layout\n}): any);\n","// @flow\nimport { APICore } from './apiCore';\nconst api = new APICore();\n\n// account\nfunction login(params: any): any {\n    return api.sendAuth(`/`, 'login', params);\n}\n\nfunction logout(): any {\n    return api.sendJRPC(``, 'logout', {});\n}\n\nfunction signup(params: any): any {\n    const baseUrl = '/register/';\n    return api.sendJRPC(`${baseUrl}`, params);\n}\n\nfunction forgotPassword(params: any): any {\n    const baseUrl = '/forget-password/';\n    return api.sendJRPC(`${baseUrl}`, params);\n}\n\nfunction forgotPasswordConfirm(params: any): any {\n    const baseUrl = '/password/reset/confirm/';\n    return api.sendJRPC(`${baseUrl}`, params);\n}\n\nexport { login, logout, signup, forgotPassword, forgotPasswordConfirm };\n","// @flow\nimport { all, fork, put, takeEvery, call } from 'redux-saga/effects';\n\nimport {\n    login as loginApi,\n    logout as logoutApi,\n    signup as signupApi,\n    forgotPassword as forgotPasswordApi,\n    forgotPasswordConfirm,\n} from '../../helpers/';\n\nimport { APICore, setAuthorization } from '../../helpers/api/apiCore';\nimport { authApiResponseSuccess, authApiResponseError } from './actions';\nimport { AuthActionTypes } from './constants';\n\nconst api = new APICore();\n\n/**\n * Login the user\n * @param {*} payload - URL and password\n */\nfunction* login({ payload: { apiURL, password, token, code } }) {\n    try {\n        // For old versions\n        let response = null;\n        if(code){\n           response = yield call(loginApi, [apiURL, password, token, code]);\n        }else{\n           response = yield call(loginApi, [apiURL, password, token]);\n        }\n\n        const user = response.data.result;\n\n        api.setLoggedInUser(user);\n        setAuthorization(user['token']);\n\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGIN_USER, user));\n    } catch (error) {\n        if(error == \"Request failed with status code 502\"){\n          error = 'Failed to connect to mtc-jsonrpc server.'\n        }\n        yield put(authApiResponseError(AuthActionTypes.LOGIN_USER, error.toString()));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\n/**\n * Logout the user\n */\nfunction* logout() {\n    try {\n        yield call(logoutApi);\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n        yield put(authApiResponseSuccess(AuthActionTypes.LOGOUT_USER, {}));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.LOGOUT_USER, error));\n    }\n}\n\nfunction* signup({ payload: { fullname, email, password } }) {\n    try {\n        const response = yield call(signupApi, { fullname, email, password });\n        const user = response.data;\n        // api.setLoggedInUser(user);\n        // setAuthorization(user['token']);\n        yield put(authApiResponseSuccess(AuthActionTypes.SIGNUP_USER, user));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.SIGNUP_USER, error));\n        api.setLoggedInUser(null);\n        setAuthorization(null);\n    }\n}\n\nfunction* forgotPassword({ payload: { username } }) {\n    try {\n        const response = yield call(forgotPasswordApi, { username });\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD, error));\n    }\n}\n\nfunction* forgotPasswordChange({ payload: { data } }) {\n    try {\n        const response = yield call(forgotPasswordConfirm, data);\n        yield put(authApiResponseSuccess(AuthActionTypes.FORGOT_PASSWORD_CHANGE, response.data));\n    } catch (error) {\n        yield put(authApiResponseError(AuthActionTypes.FORGOT_PASSWORD_CHANGE, error));\n    }\n}\n\nexport function* watchLoginUser(): any {\n    yield takeEvery(AuthActionTypes.LOGIN_USER, login);\n}\n\nexport function* watchLogout(): any {\n    yield takeEvery(AuthActionTypes.LOGOUT_USER, logout);\n}\n\nexport function* watchSignup(): any {\n    yield takeEvery(AuthActionTypes.SIGNUP_USER, signup);\n}\n\nexport function* watchForgotPassword(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD, forgotPassword);\n}\n\nexport function* watchForgotPasswordChange(): any {\n    yield takeEvery(AuthActionTypes.FORGOT_PASSWORD_CHANGE, forgotPasswordChange);\n}\n\nfunction* authSaga(): any {\n    yield all([\n        fork(watchLoginUser),\n        fork(watchLogout),\n        fork(watchSignup),\n        fork(watchForgotPassword),\n        fork(watchForgotPasswordChange),\n    ]);\n}\n\nexport default authSaga;\n","// @flow\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\n\nimport { LayoutActionTypes } from './constants';\nimport * as layoutConstants from '../../constants';\nimport {\n    changeLayoutWidth as changeLayoutWidthAction,\n    changeSidebarTheme as changeLeftSidebarThemeAction,\n    changeSidebarType as changeSidebarTypeAction,\n} from './actions';\n\n/**\n * Changes the body attribute\n */\nfunction changeBodyAttribute(attribute, value) {\n    if (document.body) document.body.setAttribute(attribute, value);\n    return true;\n}\n\n/**\n * Toggle the class on body\n * @param {*} cssClass\n */\nfunction manageBodyClass(cssClass, action = 'toggle') {\n    switch (action) {\n        case 'add':\n            if (document.body) document.body.classList.add(cssClass);\n            break;\n        case 'remove':\n            if (document.body) document.body.classList.remove(cssClass);\n            break;\n        default:\n            if (document.body) document.body.classList.toggle(cssClass);\n            break;\n    }\n\n    return true;\n}\n\n/**\n * ---------------------------------------------------------------------------------------------------------------------------\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\n * For now, we are just applying the required logic on frontend side\n * ----------------------------------------------------------------------------------------------------------------------------\n */\n\n/**\n * Changes the layout type\n * @param {*} param0\n */\nfunction* changeLayout({ payload: layout }) {\n    try {\n        yield call(changeBodyAttribute, 'data-layout', layout);\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\n        }\n\n        if (layout === layoutConstants.LAYOUT_DETACHED) {\n            yield put(changeLayoutWidthAction(layoutConstants.LAYOUT_WIDTH_FLUID));\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE));\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\n        }\n    } catch (error) {}\n}\n\n/**\n * Changes the layout width\n * @param {*} param0\n */\nfunction* changeLayoutWidth({ payload: width }) {\n    try {\n        yield call(changeBodyAttribute, 'data-layout-mode', width);\n    } catch (error) {}\n}\n\n/**\n * Changes the left sidebar theme\n * @param {*} param0\n */\nfunction* changeLeftSidebarTheme({ payload: theme }) {\n    try {\n        yield call(changeBodyAttribute, 'data-leftbar-theme', theme);\n    } catch (error) {}\n}\n\n/**\n * Changes the left sidebar type\n * @param {*} param0\n */\nfunction* changeLeftSidebarType({ payload: type }) {\n    try {\n        yield call(changeBodyAttribute, 'data-leftbar-compact-mode', type);\n    } catch (error) {}\n}\n\n/**\n * Toggles the rightsidebar\n */\nfunction* toggleRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled');\n    } catch (error) {}\n}\n\n/**\n * Show the rightsidebar\n */\nfunction* showRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'add');\n    } catch (error) {}\n}\n\n/**\n * Hides the rightsidebar\n */\nfunction* hideRightSidebar() {\n    try {\n        yield call(manageBodyClass, 'end-bar-enabled', 'remove');\n    } catch (error) {}\n}\n\n/**\n * Watchers\n */\nexport function* watchChangeLayoutType(): any {\n    yield takeEvery(LayoutActionTypes.CHANGE_LAYOUT, changeLayout);\n}\n\nexport function* watchChangeLayoutWidth(): any {\n    yield takeEvery(LayoutActionTypes.CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\n}\n\nexport function* watchChangeLeftSidebarTheme(): any {\n    yield takeEvery(LayoutActionTypes.CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\n}\n\nexport function* watchChangeLeftSidebarType(): any {\n    yield takeEvery(LayoutActionTypes.CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\n}\n\nexport function* watchToggleRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\n}\n\nexport function* watchShowRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.SHOW_RIGHT_SIDEBAR, showRightSidebar);\n}\n\nexport function* watchHideRightSidebar(): any {\n    yield takeEvery(LayoutActionTypes.HIDE_RIGHT_SIDEBAR, hideRightSidebar);\n}\n\nfunction* LayoutSaga(): any {\n    yield all([\n        fork(watchChangeLayoutType),\n        fork(watchChangeLayoutWidth),\n        fork(watchChangeLeftSidebarTheme),\n        fork(watchChangeLeftSidebarType),\n        fork(watchToggleRightSidebar),\n        fork(watchShowRightSidebar),\n        fork(watchHideRightSidebar),\n    ]);\n}\n\nexport default LayoutSaga;\n","// @flow\nimport { all } from 'redux-saga/effects';\n\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\n\nexport default function* rootSaga(): any {\n    yield all([authSaga(), layoutSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport rootSaga from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}): any {\n    let store;\n\n    if (window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__']) {\n        store = createStore(reducers, initialState, window['__REDUX_DEVTOOLS_EXTENSION_COMPOSE__'](applyMiddleware(...middlewares)));\n    } else {\n        store = createStore(reducers, initialState, applyMiddleware(...middlewares));\n    }\n    sagaMiddleware.run(rootSaga);\n    return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\nimport './i18n';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './redux/store';\nimport ReactNotifications from 'react-notifications-component'\n\nReactDOM.render(\n   <Provider store={configureStore({})}>\n       <ReactNotifications />\n       <App />\n   </Provider>,\n  document.getElementById('root')\n);\n","// @flow\nimport { AuthActionTypes } from './constants';\n\ntype AuthAction = { type: string, payload: {} | string };\n\n// common success\nexport const authApiResponseSuccess = (actionType: string, data: any): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_SUCCESS,\n    payload: { actionType, data },\n});\n// common error\nexport const authApiResponseError = (actionType: string, error: string): AuthAction => ({\n    type: AuthActionTypes.API_RESPONSE_ERROR,\n    payload: { actionType, error },\n});\n\nexport const loginUser = (apiURL: string, password: string, token: string, code: string): AuthAction => ({\n    type: AuthActionTypes.LOGIN_USER,\n    payload: { apiURL, password, token, code},\n});\n\nexport const logoutUser = (): AuthAction => ({\n    type: AuthActionTypes.LOGOUT_USER,\n    payload: {},\n});\n\nexport const signupUser = (fullname: string, email: string, password: string): AuthAction => ({\n    type: AuthActionTypes.SIGNUP_USER,\n    payload: { fullname, email, password },\n});\n\nexport const forgotPassword = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD,\n    payload: { username },\n});\n\nexport const forgotPasswordChange = (username: string): AuthAction => ({\n    type: AuthActionTypes.FORGOT_PASSWORD_CHANGE,\n    payload: { username },\n});\n\nexport const resetAuth = (): AuthAction => ({\n    type: AuthActionTypes.RESET,\n    payload: {},\n});\n","import axios from 'axios';\nimport https from 'https';\n\nimport { store } from \"react-notifications-component\";\n\nimport config from '../../config';\n// content type\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n//axios.defaults.baseURL = config.API_URL;\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    (error) => {\n\n        // Any status codes that falls outside the range of 2xx cause this function to trigger\n        let message;\n\n        if (error && error.response && error.response.status === 404) {\n            // window.location.href = '/not-found';\n        } else if (error && error.response && error.response.status === 403) {\n            store.addNotification({\n              title: \"Error: \" + error.response.status,\n              message: error.response.data.message ? error.response.data.message : \"Authorization required\",\n              type: \"danger\",\n              insert: \"top\",\n              container: \"top-right\",\n              animationIn: [\"animated\", \"fadeIn\"],\n              animationOut: [\"animated\", \"fadeOut\"],\n              dismiss: { duration: 5000 },\n              dismissable: { click: true }\n            });\n            localStorage.removeItem(AUTH_SESSION_KEY);\n            if(error.response.data.message == 'Forbidden'){\n              window.location.href = '/account/login';\n            }\n            return Promise.reject(error.response.data.message);\n\n        } else {\n          if(error.response){\n            switch (error.response.status) {\n                case 401:\n                    message = 'Invalid credentials';\n                    break;\n                case 403:\n                    message = 'Access Forbidden';\n                    break;\n                case 404:\n                    message = 'Sorry! the data you are looking for could not be found';\n                    break;\n                default: {\n                    message =\n                        error.response && error.response.data ? error.response.data['message'] : error.message || error;\n                }\n            }\n            let errorMessage = error.response.data.error  ? (error.response.data.error.message ? error.response.data.error.message : \" \") : \"Bad Request\"\n            if(error.response.data.message){\n              errorMessage = error.response.data.message\n            }\n            if(error.response.data.message != 'Method not found'){\n              store.addNotification({\n                title: \"Error: \" + error.response.status,\n                message: errorMessage,\n                type: \"danger\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: { duration: 5000 },\n                dismissable: { click: true }\n              });\n            }\n            if(error.response.data.message == 'Method not found'){\n              store.addNotification({\n                title: \"Error: Method not found.\" ,\n                message: \"Please update mtc-jsonrpc module. Run in MyTonCtrl > installer > enable JR\",\n                type: \"warning\",\n                insert: \"top\",\n                container: \"top-right\",\n                animationIn: [\"animated\", \"fadeIn\"],\n                animationOut: [\"animated\", \"fadeOut\"],\n                dismiss: { duration: 5000 },\n                dismissable: { click: true }\n              });\n            }\n            }\n            return Promise.reject(message);\n        }\n    }\n);\n\nconst AUTH_SESSION_KEY = 'hyper_user';\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token) => {\n    if (token) axios.defaults.headers.common['Authorization'] = token;\n    else delete axios.defaults.headers.common['Authorization'];\n};\n\nconst getUserFromSession = () => {\n    const user = localStorage.getItem(AUTH_SESSION_KEY);\n    return user ? (typeof user == 'object' ? user : JSON.parse(user)) : null;\n};\n\nclass APICore {\n    /**\n     * Fetches data from given url\n     */\n    get = (url, params) => {\n        let headers = {}\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            let domain = (new URL(url));\n\n            response = axios.get(`${url}?${queryString}`, {headers, params});\n        } else {\n            response = axios.get(`${url}`, {transformRequest: (data, headers) => {\n                  delete headers.common['Authorization'];\n                  return data;\n              }}, headers);\n        }\n        return response;\n    };\n\n    getFile = (url, params) => {\n        let response;\n        if (params) {\n            var queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n            response = axios.get(`${url}?${queryString}`, { responseType: 'blob' });\n        } else {\n\n            response = axios.get(`${url}`, { responseType: 'blob' });\n        }\n        return response;\n    };\n\n    getMultiple = (urls, params) => {\n        const reqs = [];\n        let queryString = '';\n        if (params) {\n            queryString = params\n                ? Object.keys(params)\n                      .map((key) => key + '=' + params[key])\n                      .join('&')\n                : '';\n        }\n\n        for (const url of urls) {\n            reqs.push(axios.get(`${url}?${queryString}`));\n        }\n        return axios.all(reqs);\n    };\n\n    /**\n     * post given data to url\n     */\n    create = (url, data) => {\n        return axios.post(url, data);\n    };\n\n    /**\n     * post jsonrpc given data to url\n     */\n    sendJRPC = (url, data, params = []) => {\n      const httpsAgent = new https.Agent({ rejectUnauthorized: false });\n        return axios.post(\n            config.SERVER_URL+'/api/v1/admin/proxy',\n            JSON.stringify({jsonrpc: \"2.0\", id: 0, method: data, params: params}, { httpsAgent }),\n      /*    {transformRequest: (data, headers) => {\n            delete headers.common['Authorization'];\n            return data;\n          }}*/\n        )\n    };\n    sendAuth = (url, data, params = []) => {\n      const httpsAgent = new https.Agent({ rejectUnauthorized: false });\n        return axios.post(\n          config.SERVER_URL+'/api/v1/admin/'+data,\n          JSON.stringify({jsonrpc: \"2.0\", id: 0, method: data, params: params}, { httpsAgent }),\n      /*    {transformRequest: (data, headers) => {\n            delete headers.common['Authorization'];\n            return data;\n          }}*/\n        )\n    };\n\n\n    /**\n     * Updates patch data\n     */\n    updatePatch = (url, data) => {\n        return axios.patch(url, data);\n    };\n\n    /**\n     * Updates data\n     */\n    update = (url, data) => {\n        return axios.put(url, data);\n    };\n\n    /**\n     * Deletes data\n     */\n    delete = (url) => {\n        return axios.delete(url);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    createWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.post(url, formData, config);\n    };\n\n    /**\n     * post given data to url with file\n     */\n    updateWithFile = (url, data) => {\n        const formData = new FormData();\n        for (const k in data) {\n            formData.append(k, data[k]);\n        }\n\n        const config = {\n            headers: {\n                ...axios.defaults.headers,\n                'content-type': 'multipart/form-data',\n            },\n        };\n        return axios.patch(url, formData, config);\n    };\n\n    isUserAuthenticated = () => {\n        const user = this.getLoggedInUser();\n        if (!user || (user && !user.token)) {\n            return false;\n        }\n\n    /*    const decoded = jwtDecode(user.token);\n        const currentTime = Date.now() / 1000;\n        if (decoded.exp < currentTime) {\n            console.warn('access token expired');\n            return false;\n        } else {\n            return true;\n        }*/\n        return true;\n    };\n\n\n\n    setLoggedInUser = (session) => {\n\n        if (session) {\n          localStorage.setItem(AUTH_SESSION_KEY, JSON.stringify(session));\n          localStorage.setItem('URL', config.SERVER_URL);\n          axios.defaults.baseURL = config.SERVER_URL;\n        }\n        else {\n            localStorage.removeItem(AUTH_SESSION_KEY);\n        }\n    };\n\n    /**\n     * Returns the logged in user\n     */\n    getLoggedInUser = () => {\n        return getUserFromSession();\n    };\n\n    setUserInSession = (modifiedUser) => {\n        let userInfo = localStorage.getItem(AUTH_SESSION_KEY);\n        if (userInfo) {\n            const { username, token } = JSON.parse(userInfo);\n            this.setLoggedInUser({ token, ...username, ...modifiedUser });\n        }\n    };\n    removeSession = () => {\n        localStorage.removeItem(AUTH_SESSION_KEY);\n    };\n}\n\n/*\nCheck if token available in session\n*/\nlet user = getUserFromSession();\nif (user) {\n    const { token, api } = user;\n    if (token) {\n        axios.defaults.baseURL = config.SERVER_URL;\n        setAuthorization(token);\n    }\n}\n\n\n\nexport { APICore, setAuthorization };\n","// @flow\nimport { LayoutActionTypes } from './constants';\n\ntype LayoutAction = { type: string, payload?: string | null };\n\nexport const changeLayout = (layout: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType: string): LayoutAction => ({\n    type: LayoutActionTypes.CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = (): LayoutAction => ({\n    type: LayoutActionTypes.HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","import dotenv from 'dotenv';\ndotenv.config();\n// console.log(process.env)\nconst config = {\n    API_URL: process.env.REACT_APP_API_URL,\n    NODE_URL: process.env.NODE_URL,\n    SERVER_URL:process.env.REACT_APP_SERVER_URL\n};\n\nexport default config;","export * from './auth/actions';\nexport * from './layout/actions';\n","export const AuthActionTypes = {\n    API_RESPONSE_SUCCESS: '@@auth/API_RESPONSE_SUCCESS',\n    API_RESPONSE_ERROR: '@@auth/API_RESPONSE_ERROR',\n\n    LOGIN_USER: '@@auth/LOGIN_USER',\n    LOGOUT_USER: '@@auth/LOGOUT_USER',\n    SIGNUP_USER: '@@auth/SIGNUP_USER',\n    FORGOT_PASSWORD: '@@auth/FORGOT_PASSWORD',\n    FORGOT_PASSWORD_CHANGE: '@@auth/FORGOT_PASSWORD_CHANGE',\n\n    RESET: '@@auth/RESET',\n};\n"],"sourceRoot":""}