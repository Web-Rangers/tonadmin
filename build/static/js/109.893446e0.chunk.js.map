{"version":3,"sources":["components/Portlet.js","pages/uikit/Cards.js","components/PageTitle.js","assets/images/small/small-2.jpg","assets/images/small/small-3.jpg","assets/images/small/small-1.jpg","assets/images/small/small-4.jpg"],"names":["Portlet","props","state","children","useState","collapse","setCollapse","loading","setLoading","hidden","setHidden","Card","className","classNames","Body","to","onClick","setTimeout","Math","random","Title","tag","Collapse","in","CardWithImage","Img","src","cardImg","as","Text","CardWithImage2","cardImg3","ListGroup","variant","Item","Link","href","CardWithImage3","cardImg4","CardWithTitleAndImage","Subtitle","cardImg2","CardWithSpecialTitle","CardWithHeader","Header","CardWithHeaderAndQuote","Footer","title","CardWithHeaderAndFooter","ColoredCards","Row","map","color","index","Col","md","BorderdCards","HorizontalCards","StretchedLinks","colors","lg","CardsGroup","CardGroup","CardsDeck","Cards","Fragment","PageTitle","breadCrumbItems","label","path","active","sm","item"],"mappings":"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","file":"static/js/109.893446e0.chunk.js","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Card, Collapse } from 'react-bootstrap';\n\ntype PortletProps = {\n    className?: string,\n    children?: any,\n};\n\ntype PortletState = {\n    collapse?: boolean,\n    loading?: boolean,\n    hidden?: boolean,\n};\n\n/**\n * Portlet\n */\nconst Portlet = (props: PortletProps, state: PortletState): React$Element<any> => {\n    const children = props.children || null;\n\n    const [collapse, setCollapse] = useState(true);\n    const [loading, setLoading] = useState(false);\n    const [hidden, setHidden] = useState(false);\n\n    /**\n     * Toggle the body\n     */\n    const toggleContent = () => {\n        setCollapse(!collapse);\n    };\n\n    /**\n     * Reload the content\n     */\n    const reloadContent = () => {\n        setLoading(true);\n        setTimeout(() => {\n            setLoading(false);\n        }, 500 + 300 * (Math.random() * 5));\n    };\n\n    /**\n     * remove the portlet\n     */\n    const remove = () => {\n        setHidden(true);\n    };\n\n    return (\n        <>\n            {!hidden ? (\n                <Card className={classNames(props.className)}>\n                    {loading && (\n                        <div className=\"card-disabled\">\n                            <div className=\"card-portlets-loader\"></div>\n                        </div>\n                    )}\n\n                    <Card.Body>\n                        <div className=\"card-widgets\">\n                            <Link to=\"#\" className={classNames(props.className)} onClick={reloadContent}>\n                                <i className=\"mdi mdi-refresh\"></i>\n                            </Link>\n                            <Link to=\"#\" className={classNames(props.className)} onClick={toggleContent}>\n                                <i\n                                    className={classNames('mdi', {\n                                        'mdi-minus': collapse,\n                                        'mdi-plus': !collapse,\n                                    })}></i>\n                            </Link>\n                            <Link to=\"#\" className={classNames(props.className)} onClick={remove}>\n                                <i className=\"mdi mdi-close\"></i>\n                            </Link>\n                        </div>\n\n                        <Card.Title tag=\"h5\" className=\"mb-0\">\n                            Card title\n                        </Card.Title>\n\n                        <Collapse in={collapse} className=\"pt-3\">\n                            {children}\n                        </Collapse>\n                    </Card.Body>\n                </Card>\n            ) : null}\n        </>\n    );\n};\n\nexport default Portlet;\n","// @flow\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, CardGroup, ListGroup } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport Portlet from '../../components/Portlet';\n\nimport cardImg from '../../assets/images/small/small-1.jpg';\nimport cardImg2 from '../../assets/images/small/small-4.jpg';\nimport cardImg3 from '../../assets/images/small/small-2.jpg';\nimport cardImg4 from '../../assets/images/small/small-3.jpg';\n\nconst CardWithImage = () => {\n    return (\n        <Card className=\"d-block\">\n            <Card.Img src={cardImg} />\n            <Card.Body>\n                <Card.Title as=\"h5\">Card title</Card.Title>\n                <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of the card's content. Some\n                    quick example text to build on the card title and make up.\n                </Card.Text>\n                <button className=\"btn btn-primary\">Button</button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithImage2 = () => {\n    return (\n        <Card className=\"d-block\">\n            <Card.Img src={cardImg3} />\n            <Card.Body>\n                <Card.Title as=\"h5\">Card title</Card.Title>\n                <Card.Text>Some quick example text to build on the card..</Card.Text>\n            </Card.Body>\n\n            <ListGroup variant=\"flush\">\n                <ListGroup.Item>Cras justo odio</ListGroup.Item>\n            </ListGroup>\n\n            <Card.Body>\n                <Card.Link href=\"#\">Card link</Card.Link>\n                <Card.Link href=\"#\">Another link</Card.Link>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithImage3 = () => {\n    return (\n        <Card className=\"d-block\">\n            <Card.Img src={cardImg4} />\n            <Card.Body>\n                <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of the card's content. Some\n                    quick example text to build on the card title and make up.\n                </Card.Text>\n                <button className=\"btn btn-primary\">Button</button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithTitleAndImage = () => {\n    return (\n        <Card>\n            <Card.Body className=\"d-block\">\n                <Card.Title as=\"h5\">Card title</Card.Title>\n                <Card.Subtitle as=\"h6\" className=\"text-muted\">\n                    Support card subtitle\n                </Card.Subtitle>\n            </Card.Body>\n            <Card.Img src={cardImg2} className=\"img-fluid\" />\n            <Card.Body>\n                <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of the card's content.\n                </Card.Text>\n                <Card.Link href=\"#\">Card link</Card.Link>\n                <Card.Link href=\"#\">Another link</Card.Link>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithSpecialTitle = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h5\">Special title treatment</Card.Title>\n                <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\n                <button className=\"btn btn-primary\">Go somewhere</button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithHeader = () => {\n    return (\n        <Card>\n            <Card.Header as=\"h6\">Featured</Card.Header>\n            <Card.Body>\n                <Card.Title as=\"h5\">Special title treatment</Card.Title>\n                <Card.Text>With supporting text below as a natural lead-in to additional content.</Card.Text>\n                <button className=\"btn btn-primary mt-1\">Go somewhere</button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst CardWithHeaderAndQuote = () => {\n    return (\n        <Card>\n            <Card.Header>Quote</Card.Header>\n            <Card.Body>\n                <blockquote className=\"card-bodyquote\">\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a ante.</p>\n                </blockquote>\n            </Card.Body>\n            <Card.Footer>\n                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n            </Card.Footer>\n        </Card>\n    );\n};\n\nconst CardWithHeaderAndFooter = () => {\n    return (\n        <Card>\n            <Card.Header>Featured</Card.Header>\n            <Card.Body>\n                <button className=\"btn btn-primary mt-1\">Go somewhere</button>\n            </Card.Body>\n            <Card.Footer>2 days ago</Card.Footer>\n        </Card>\n    );\n};\n\nconst ColoredCards = () => {\n    const colors = ['secondary', 'primary', 'success', 'info', 'warning', 'danger'];\n\n    return (\n        <Row>\n            {colors.map((color, index) => {\n                return (\n                    <Col md={4} key={index}>\n                        <Card className={classNames('text-white', [`bg-${color}`])}>\n                            <Card.Body>\n                                <Card.Title as=\"h5\">Special title treatment</Card.Title>\n                                <Card.Text>\n                                    With supporting text below as a natural lead-in to additional content.\n                                </Card.Text>\n                                <Card.Text>\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a\n                                    ante.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nconst BorderdCards = () => {\n    const colors = ['secondary', 'primary', 'success'];\n\n    return (\n        <Row>\n            {colors.map((color, index) => {\n                return (\n                    <Col md={4} key={index}>\n                        <Card className={classNames('border', [`border-${color}`])}>\n                            <Card.Body>\n                                <Card.Title as=\"h5\">Special title treatment</Card.Title>\n                                <Card.Text>\n                                    With supporting text below as a natural lead-in to additional content.\n                                </Card.Text>\n                                <button className={classNames('btn', 'btn-sm', [`btn-${color}`])}>Button</button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nconst HorizontalCards = () => {\n    return (\n        <Card>\n            <Row className=\"g-0 align-items-center\">\n                <Col md={4}>\n                    <Card.Img src={cardImg2} className=\"img-fluid\" />\n                </Col>\n\n                <Col md={8}>\n                    <Card.Body>\n                        <Card.Title as=\"h5\">Card Title</Card.Title>\n                        <Card.Text>\n                            This is a wider card with supporting text below as a natural lead-in to additional content.\n                            This content is a little bit longer.\n                        </Card.Text>\n                        <Card.Text>\n                            <small className=\"text-muted\">Last updated 3 mins ago</small>\n                        </Card.Text>\n                    </Card.Body>\n                </Col>\n            </Row>\n        </Card>\n    );\n};\n\nconst StretchedLinks = () => {\n    const colors = ['primary', 'info'];\n    return (\n        <Row>\n            {colors.map((color, index) => {\n                return (\n                    <Col key={index} md={6} lg={3}>\n                        <Card>\n                            <Card.Img src={cardImg} />\n                            <Card.Body>\n                                <Card.Title as=\"h5\">Card with stretched link</Card.Title>\n                                <button className={classNames('btn', 'stretched-link', 'mt-2', [`btn-${color}`])}>\n                                    Go somewhere\n                                </button>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n            {colors.map((color, index) => {\n                return (\n                    <Col key={index} md={6} lg={3}>\n                        <Card>\n                            <Card.Img src={cardImg} />\n                            <Card.Body>\n                                <Card.Title as=\"h5\">\n                                    <Link to=\"#\" className={classNames('stretched-link', [`text-${color}`])}>\n                                        Card with stretched link\n                                    </Link>\n                                </Card.Title>\n                                <Card.Text>\n                                    Some quick example text to build on the card up the bulk of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                );\n            })}\n        </Row>\n    );\n};\n\nconst CardsGroup = () => {\n    return (\n        <CardGroup>\n            <CardWithImage2 />\n            <CardWithImage2 />\n            <CardWithImage2 />\n        </CardGroup>\n    );\n};\n\nconst CardsDeck = () => {\n    return (\n        <Row className=\"row-cols-1 row-cols-md-3 g-3\">\n            <Col>\n                <CardWithImage2 />\n            </Col>\n            <Col>\n                <CardWithImage2 />\n            </Col>\n            <Col>\n                <CardWithImage2 />\n            </Col>\n        </Row>\n    );\n};\n\nconst Cards = (): React$Element<React$FragmentType> => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/cards' },\n                    { label: 'Cards', path: '/ui/cards', active: true },\n                ]}\n                title={'Cards'}\n            />\n\n            <Row>\n                <Col md={6} lg={3}>\n                    <CardWithImage />\n                </Col>\n\n                <Col md={6} lg={3}>\n                    <CardWithImage2 />\n                </Col>\n\n                <Col md={6} lg={3}>\n                    <CardWithImage3 />\n                </Col>\n\n                <Col md={6} lg={3}>\n                    <CardWithTitleAndImage />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={6}>\n                    <CardWithSpecialTitle />\n                </Col>\n                <Col sm={6}>\n                    <CardWithSpecialTitle />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col md={4}>\n                    <CardWithHeader />\n                </Col>\n\n                <Col md={4}>\n                    <CardWithHeaderAndQuote />\n                </Col>\n\n                <Col md={4}>\n                    <CardWithHeaderAndFooter />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={12}>\n                    <h4 className=\"mb-4\">Card Colored</h4>\n                </Col>\n                <Col sm={12}>\n                    <ColoredCards />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={12}>\n                    <h4 className=\"mb-4\">Card Bordered</h4>\n                </Col>\n                <Col sm={12}>\n                    <BorderdCards />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={12}>\n                    <h4 className=\"mb-4\">Horizontal Card</h4>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <HorizontalCards />\n                </Col>\n                <Col lg={6}>\n                    <HorizontalCards />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <h4 className=\"mb-4\">Card Group</h4>\n                </Col>\n            </Row>\n\n            <Row>\n                <CardsGroup />\n            </Row>\n\n            <Row>\n                <Col>\n                    <h4 className=\"mt-4 mb-4\">Stretched link</h4>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <StretchedLinks color=\"primary\" />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col sm={12}>\n                    <h4 className=\"mb-4 mt-4\">Card Decks</h4>\n                </Col>\n                <Col sm={12}>\n                    <CardsDeck />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <h4 className=\"mb-4 mt-4\">Custom Card Portlets</h4>\n                </Col>\n            </Row>\n            <Row>\n                <Col md={4}>\n                    <Portlet className=\"mb-md-0 mb-3\">\n                        <p>\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                            squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa\n                            nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid\n                            single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft\n                            beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice\n                            lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you\n                            probably haven't heard of them accusamus labore sustainable VHS.\n                        </p>\n                    </Portlet>\n                </Col>\n\n                <Col md={4}>\n                    <Portlet className=\"bg-primary text-white mb-md-0 mb-3\">\n                        <p>\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                            squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa\n                            nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid\n                            single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft\n                            beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice\n                            lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you\n                            probably haven't heard of them accusamus labore sustainable VHS.\n                        </p>\n                    </Portlet>\n                </Col>\n\n                <Col md={4}>\n                    <Portlet className=\"bg-success text-white mb-0\">\n                        <p>\n                            Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad\n                            squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa\n                            nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid\n                            single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft\n                            beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice\n                            lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you\n                            probably haven't heard of them accusamus labore sustainable VHS.\n                        </p>\n                    </Portlet>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Cards;\n","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","export default __webpack_public_path__ + \"static/media/small-2.ae823909.jpg\";","export default __webpack_public_path__ + \"static/media/small-3.c89ec1a0.jpg\";","export default __webpack_public_path__ + \"static/media/small-1.c3618961.jpg\";","export default __webpack_public_path__ + \"static/media/small-4.0fdf5758.jpg\";"],"sourceRoot":""}