{"version":3,"sources":["pages/uikit/Typography.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","components/PageTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js"],"names":["Typography","Fragment","breadCrumbItems","label","path","active","title","Body","className","xl","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","isTrivialHref","href","trim","SafeAnchor","disabled","onKeyDown","handleClick","event","onClick","preventDefault","stopPropagation","role","tabIndex","createChainedFunction","key","PageTitle","Item","map","item","index","p","context","funcs","filter","f","reduce","acc","Error","args","apply","this","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","length","BreadcrumbItem","children","linkAs","LinkComponent","linkProps","target","undefined","Breadcrumb","listProps","Object","assign","CardImg","variant","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay"],"mappings":"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","file":"static/js/96.fd8354f2.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nconst Typography = (): React$Element<React$FragmentType> => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Base UI', path: '/ui/typography' },\n                    { label: 'Typography', path: '/ui/typography', active: true },\n                ]}\n                title={'Typography'}\n            />\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Display headings</h4>\n                            <p className=\"text-muted font-14\">\n                                Traditional heading elements are designed to work best in the meat of your page content.\n                                When you need a heading to stand out, consider using a display heading—a larger,\n                                slightly more opinionated heading style.\n                            </p>\n\n                            <h1 className=\"display-1\">Display 1</h1>\n                            <p className=\"text-muted\">\n                                Suspendisse vel quam malesuada, aliquet sem sit amet, fringilla elit. Morbi tempor\n                                tincidunt tempor. Etiam id turpis viverra, vulputate sapien nec, varius sem. Curabitur\n                                ullamcorper fringilla eleifend. In ut eros hendrerit est consequat posuere et at velit.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h1 className=\"display-2\">Display 2</h1>\n                            <p className=\"text-muted\">\n                                In nec rhoncus eros. Vestibulum eu mattis nisl. Quisque viverra viverra magna nec\n                                pulvinar. Maecenas pellentesque porta augue, consectetur facilisis diam porttitor sed.\n                                Suspendisse tempor est sodales augue rutrum tincidunt. Quisque a malesuada purus.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h1 className=\"display-3\">Display 3</h1>\n                            <p className=\"text-muted\">\n                                Vestibulum auctor tincidunt semper. Phasellus ut vulputate lacus. Suspendisse ultricies\n                                mi eros, sit amet tempor nulla varius sed. Proin nisl nisi, feugiat quis bibendum vitae,\n                                dapibus in tellus.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h1 className=\"display-4\">Display 4</h1>\n                            <p className=\"text-muted mb-0\">\n                                Nulla et mattis nunc. Curabitur scelerisque commodo condimentum. Mauris blandit, velit a\n                                consectetur egestas, diam arcu fermentum justo, eget ultrices arcu eros vel erat.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h1 className=\"display-5\">Display 5</h1>\n                            <p className=\"text-muted mb-0\">\n                                Nulla et mattis nunc. Curabitur scelerisque commodo condimentum. Mauris blandit, velit a\n                                consectetur egestas, diam arcu fermentum justo, eget.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h1 className=\"display-6\">Display 6</h1>\n                            <p className=\"text-muted mb-0\">\n                                Nulla et mattis nunc. Curabitur scelerisque commodo condimentum. Mauris blandit, velit a\n                                consectetur egestas, diam arcu fermentum justo, eget.\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Headings</h4>\n                            <p className=\"text-muted font-14\">\n                                All HTML headings, <code className=\"highlighter-rouge\">&lt;h1&gt;</code> through{' '}\n                                <code>&lt;h6&gt;</code>, are available. <code>.h1</code> through <code>.h6</code>{' '}\n                                classes are also available, for when you want to match the font styling of a heading but\n                                still want your text to be displayed inline.\n                            </p>\n\n                            <h1>This is a Heading 1</h1>\n                            <p className=\"text-muted\">\n                                Suspendisse vel quam malesuada, aliquet sem sit amet, fringilla elit. Morbi tempor\n                                tincidunt tempor. Etiam id turpis viverra, vulputate sapien nec, varius sem. Curabitur\n                                ullamcorper fringilla eleifend. In ut eros hendrerit est consequat posuere et at velit.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h2>This is a Heading 2</h2>\n                            <p className=\"text-muted\">\n                                In nec rhoncus eros. Vestibulum eu mattis nisl. Quisque viverra viverra magna nec\n                                pulvinar. Maecenas pellentesque porta augue, consectetur facilisis diam porttitor sed.\n                                Suspendisse tempor est sodales augue rutrum tincidunt. Quisque a malesuada purus.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h3>This is a Heading 3</h3>\n                            <p className=\"text-muted\">\n                                Vestibulum auctor tincidunt semper. Phasellus ut vulputate lacus. Suspendisse ultricies\n                                mi eros, sit amet tempor nulla varius sed. Proin nisl nisi, feugiat quis bibendum vitae,\n                                dapibus in tellus.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h4>This is a Heading 4</h4>\n                            <p className=\"text-muted\">\n                                Nulla et mattis nunc. Curabitur scelerisque commodo condimentum. Mauris blandit, velit a\n                                consectetur egestas, diam arcu fermentum justo, eget ultrices arcu eros vel erat.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h5>This is a Heading 5</h5>\n                            <p className=\"text-muted\">\n                                Quisque nec turpis at urna dictum luctus. Suspendisse convallis dignissim eros at\n                                volutpat. In egestas mattis dui. Aliquam mattis dictum aliquet. Nulla sapien mauris,\n                                eleifend et sem ac, commodo dapibus odio. Vivamus pretium nec odio cursus elementum.\n                                Suspendisse molestie ullamcorper ornare.\n                            </p>\n\n                            <div className=\"clearfix\"></div>\n\n                            <h6>This is a Heading 6</h6>\n                            <p className=\"text-muted mb-0\">\n                                Donec ultricies, lacus id tempor condimentum, orci leo faucibus sem, a molestie libero\n                                lectus ac justo. ultricies mi eros, sit amet tempor nulla varius sed. Proin nisl nisi,\n                                feugiat quis bibendum vitae, dapibus in tellus.\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Inline text elements</h4>\n                            <p className=\"text-muted font-14\">Styling for common inline HTML5 elements.</p>\n                            <p className=\"lead\">Your title goes here</p>\n                            <p>\n                                You can use the mark tag to <mark>highlight</mark> text.\n                            </p>\n                            <p>\n                                <del>This line of text is meant to be treated as deleted text.</del>\n                            </p>\n                            <p>\n                                <s>This line of text is meant to be treated as no longer accurate.</s>\n                            </p>\n                            <p>\n                                <ins>This line of text is meant to be treated as an addition to the document.</ins>\n                            </p>\n                            <p>\n                                <u>This line of text will render as underlined</u>\n                            </p>\n                            <p>\n                                <small>This line of text is meant to be treated as fine print.</small>\n                            </p>\n                            <p>\n                                <strong>This line rendered as bold text.</strong>\n                            </p>\n                            <p>\n                                <em>This line rendered as italicized text.</em>\n                            </p>\n                            Nulla <abbr title=\"attribute\">attr</abbr> vitae elit libero, a pharetra augue.\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Contextual Text Colors</h4>\n                            <p className=\"text-muted font-14\">Available color variations.</p>\n\n                            <p className=\"text-muted\">Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.</p>\n                            <p className=\"text-primary\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                            <p className=\"text-success\">\n                                Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                            </p>\n                            <p className=\"text-info\">Maecenas sed diam eget risus varius blandit sit amet non magna.</p>\n                            <p className=\"text-warning\">Etiam porta sem malesuada magna mollis euismod.</p>\n                            <p className=\"text-danger\">Donec ullamcorper nulla non metus auctor fringilla.</p>\n                            <p className=\"text-dark\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                            <p className=\"text-white bg-dark\">\n                                Fusce dapibus, tellus ac cursus commodo, tortor mauris nibh.\n                            </p>\n                            <p className=\"text-black-50\">Nullam id dolor id nibh ultricies vehicula ut id elit.</p>\n                            <p className=\"text-white-50 bg-dark mb-0\">\n                                Duis mollis, est non commodo luctus, nisi erat porttitor ligula.\n                            </p>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={4}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Unordered</h4>\n                            <p className=\"text-muted\">A list of items in which the order does not explicitly matter.</p>\n\n                            <ul>\n                                <li>Lorem ipsum dolor sit amet</li>\n                                <li>Consectetur adipiscing elit</li>\n                                <li>Integer molestie lorem at massa</li>\n                                <li>Facilisis in pretium nisl aliquet</li>\n                                <li>\n                                    Nulla volutpat aliquam velit\n                                    <ul>\n                                        <li>Phasellus iaculis neque</li>\n                                        <li>Purus sodales ultricies</li>\n                                        <li>Vestibulum laoreet porttitor sem</li>\n                                        <li>Ac tristique libero volutpat at</li>\n                                    </ul>\n                                </li>\n                                <li>Faucibus porta lacus fringilla vel</li>\n                                <li>Aenean sit amet erat nunc</li>\n                                <li>Eget porttitor lorem</li>\n                            </ul>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Ordered</h4>\n                            <p className=\"text-muted\">A list of items in which the order does explicitly matter.</p>\n\n                            <ol>\n                                <li>Lorem ipsum dolor sit amet</li>\n                                <li>Consectetur adipiscing elit</li>\n                                <li>Integer molestie lorem at massa</li>\n                                <li>Facilisis in pretium nisl aliquet</li>\n                                <li>\n                                    Nulla volutpat aliquam velit\n                                    <ol>\n                                        <li>Phasellus iaculis neque</li>\n                                        <li>Purus sodales ultricies</li>\n                                        <li>Vestibulum laoreet porttitor sem</li>\n                                        <li>Ac tristique libero volutpat at</li>\n                                    </ol>\n                                </li>\n                                <li>Faucibus porta lacus fringilla vel</li>\n                                <li>Aenean sit amet erat nunc</li>\n                                <li>Eget porttitor lorem</li>\n                            </ol>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={4}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Unstyled</h4>\n                            <p className=\"text-muted\">\n                                <strong>This only applies to immediate children list items</strong>, meaning you will\n                                need to add the class for any nested lists as well.\n                            </p>\n\n                            <ul className=\"list-unstyled\">\n                                <li>Lorem ipsum dolor sit amet</li>\n                                <li>\n                                    Integer molestie lorem at massa\n                                    <ul>\n                                        <li>Phasellus iaculis neque</li>\n                                    </ul>\n                                </li>\n                                <li>Faucibus porta lacus fringilla vel</li>\n                                <li>Eget porttitor lorem</li>\n                            </ul>\n\n                            <h5>Inline</h5>\n                            <p className=\"text-muted m-b-15\">\n                                Place all list items on a single line with <code>display: inline-block;</code>\n                                and some light padding.\n                            </p>\n\n                            <ul className=\"list-inline\">\n                                <li className=\"list-inline-item\">Lorem ipsum</li>\n                                <li className=\"list-inline-item\">Phasellus iaculis</li>\n                                <li className=\"list-inline-item\">Nulla volutpat</li>\n                            </ul>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Blockquotes</h4>\n                            <p className=\"text-muted font-14\">\n                                For quoting blocks of content from another source within your document. Wrap{' '}\n                                <code>&lt;blockquote className=\"blockquote\"&gt;</code> around any{' '}\n                                <abbr title=\"HyperText Markup Language\">HTML</abbr> as the quote.\n                            </p>\n\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a\n                                    ante.\n                                </p>\n                            </blockquote>\n                            <figcaption className=\"blockquote-footer\">\n                                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                            </figcaption>\n\n                            <p className=\"text-muted m-b-15\">\n                                Use text utilities as needed to change the alignment of your blockquote.\n                            </p>\n\n                            <blockquote className=\"blockquote text-center\">\n                                <p className=\"mb-0\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a\n                                    ante.\n                                </p>\n                            </blockquote>\n                            <figcaption className=\"blockquote-footer text-center\">\n                                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                            </figcaption>\n\n                            <blockquote className=\"blockquote text-end\">\n                                <p className=\"mb-0\">\n                                    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat a\n                                    ante.\n                                </p>\n                            </blockquote>\n                            <figcaption className=\"blockquote-footer text-end\">\n                                Someone famous in <cite title=\"Source Title\">Source Title</cite>\n                            </figcaption>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col xl={6}>\n                    <Card>\n                        <Card.Body>\n                            <h4 className=\"header-title\">Description list alignment</h4>\n                            <p className=\"text-muted\">\n                                Align terms and descriptions horizontally by using our grid system’s predefined classes\n                                (or semantic mixins). For longer terms, you can optionally add a{' '}\n                                <code className=\"highlighter-rouge\">.text-truncate</code> class to truncate the text\n                                with an ellipsis.\n                            </p>\n\n                            <dl className=\"row\">\n                                <dt className=\"col-sm-3\">Description lists</dt>\n                                <dd className=\"col-sm-9\">A description list is perfect for defining terms.</dd>\n\n                                <dt className=\"col-sm-3\">Euismod</dt>\n                                <dd className=\"col-sm-9\">\n                                    <p>\n                                        Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.\n                                    </p>\n                                    <p>Donec id elit non mi porta gravida at eget metus.</p>\n                                </dd>\n\n                                <dt className=\"col-sm-3\">Malesuada porta</dt>\n                                <dd className=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\n\n                                <dt className=\"col-sm-3 text-truncate\">Truncated term is truncated</dt>\n                                <dd className=\"col-sm-9\">\n                                    Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut\n                                    fermentum massa justo sit amet risus.\n                                </dd>\n\n                                <dt className=\"col-sm-3\">Nesting</dt>\n                                <dd className=\"col-sm-9\">\n                                    <dl className=\"row\">\n                                        <dt className=\"col-sm-4\">Nested definition list</dt>\n                                        <dd className=\"col-sm-8\">\n                                            Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.\n                                        </dd>\n                                    </dl>\n                                </dd>\n                            </dl>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Typography;\n","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst defaultProps = {\n  noGutters: false\n};\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  noGutters,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters', ...classes)\n  });\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, ...spans, ...classes)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = SafeAnchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});"],"sourceRoot":""}