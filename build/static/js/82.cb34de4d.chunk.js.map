{"version":3,"sources":["pages/tables/Basic.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/react-bootstrap/esm/SafeAnchor.js","components/PageTitle.js","../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/Table.js"],"names":["records","id","firstName","lastName","username","BasicTable","Body","className","map","record","index","scope","InverseTable","variant","StripedRowsTable","striped","BorderedTable","bordered","HoverableTable","hover","SmallTable","size","ResponsiveTable","responsive","Tables","Fragment","breadCrumbItems","label","path","active","title","xl","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","isTrivialHref","href","trim","SafeAnchor","disabled","onKeyDown","handleClick","event","onClick","preventDefault","stopPropagation","role","tabIndex","createChainedFunction","key","PageTitle","Item","item","p","context","funcs","filter","f","reduce","acc","Error","args","apply","this","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","length","BreadcrumbItem","children","linkAs","LinkComponent","linkProps","target","undefined","Breadcrumb","listProps","Object","assign","CardImg","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","value","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","CardTitle","CardSubtitle","CardLink","CardText","CardFooter","CardImgOverlay","Card","bg","text","border","body","Img","Title","Subtitle","Link","Text","Header","Footer","ImgOverlay","Table","borderless","table","responsiveClass"],"mappings":"oHACA,+EAOMA,EAAU,CACZ,CAAEC,GAAI,EAAGC,UAAW,OAAQC,SAAU,OAAQC,SAAU,QACxD,CAAEH,GAAI,EAAGC,UAAW,QAASC,SAAU,WAAYC,SAAU,QAC7D,CAAEH,GAAI,EAAGC,UAAW,OAAQC,SAAU,IAAKC,SAAU,SACrD,CAAEH,GAAI,EAAGC,UAAW,MAAOC,SAAU,IAAKC,SAAU,SACpD,CAAEH,GAAI,EAAGC,UAAW,SAAUC,SAAU,WAAYC,SAAU,QAG5DC,EAAa,WACf,OACI,cAAC,IAAD,UACI,eAAC,IAAKC,KAAN,WACI,oBAAIC,UAAU,eAAd,2BACA,oBAAGA,UAAU,0BAAb,sBACa,yCADb,cAIA,eAAC,IAAD,CAAOA,UAAU,OAAjB,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKP,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCE,EAAe,WACjB,OACI,cAAC,IAAD,UACI,eAAC,IAAKN,KAAN,WACI,oBAAIC,UAAU,eAAd,2BACA,oBAAGA,UAAU,0BAAb,wGACqF,wCAAkB,IADvG,eAKA,eAAC,IAAD,CAAOA,UAAU,OAAOM,QAAQ,OAAhC,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKb,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCI,EAAmB,WACrB,OACI,cAAC,IAAD,UACI,eAAC,IAAKR,KAAN,WACI,oBAAIC,UAAU,eAAd,0BACA,oBAAGA,UAAU,0BAAb,iBACQ,2CADR,yBAIA,eAAC,IAAD,CAAOA,UAAU,OAAOQ,SAAO,EAA/B,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKf,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCM,EAAgB,WAClB,OACI,cAAC,IAAD,UACI,eAAC,IAAKV,KAAN,WACI,oBAAIC,UAAU,eAAd,4BACA,oBAAGA,UAAU,0BAAb,iBACQ,4CADR,iEAIA,eAAC,IAAD,CAAOA,UAAU,OAAOU,UAAQ,EAAhC,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKjB,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCQ,EAAiB,WACnB,OACI,cAAC,IAAD,UACI,eAAC,IAAKZ,KAAN,WACI,oBAAIC,UAAU,eAAd,4BACA,oBAAGA,UAAU,0BAAb,iBACQ,yCADR,sDAIA,eAAC,IAAD,CAAOA,UAAU,OAAOY,OAAK,EAA7B,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKnB,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCU,EAAa,WACf,OACI,cAAC,IAAD,UACI,eAAC,IAAKd,KAAN,WACI,oBAAIC,UAAU,eAAd,yBACA,oBAAGA,UAAU,0BAAb,iBACQ,6CADR,4EAIA,eAAC,IAAD,CAAOA,UAAU,OAAOc,KAAK,KAA7B,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKrB,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAenCY,EAAkB,WACpB,OACI,cAAC,IAAD,UACI,eAAC,IAAKhB,KAAN,WACI,oBAAIC,UAAU,eAAd,+BACA,oBAAGA,UAAU,0BAAb,0CACiC,8CADjC,4CAIA,eAAC,IAAD,CAAOA,UAAU,OAAOgB,YAAU,EAAlC,UACI,gCACI,+BACI,mCACA,4CACA,2CACA,+CAGR,gCACKvB,EAAQQ,KAAI,SAACC,EAAQC,GAClB,OACI,+BACI,oBAAIC,MAAM,MAAV,SAAiBF,EAAOR,KACxB,6BAAKQ,EAAOP,YACZ,6BAAKO,EAAON,WACZ,6BAAKM,EAAOL,aAJPM,iBAiE1Bc,UAlDA,WACX,OACI,eAAC,IAAMC,SAAP,WACI,cAAC,IAAD,CACIC,gBAAiB,CACb,CAAEC,MAAO,SAAUC,KAAM,oBACzB,CAAED,MAAO,eAAgBC,KAAM,mBAAoBC,QAAQ,IAE/DC,MAAO,iBAGX,eAAC,IAAD,WACI,cAAC,IAAD,CAAKC,GAAI,EAAT,SACI,cAAC1B,EAAD,MAGJ,cAAC,IAAD,CAAK0B,GAAI,EAAT,SACI,cAACnB,EAAD,SAIR,eAAC,IAAD,WACI,cAAC,IAAD,CAAKmB,GAAI,EAAT,SACI,cAACjB,EAAD,MAGJ,cAAC,IAAD,CAAKiB,GAAI,EAAT,SACI,cAACf,EAAD,SAIR,eAAC,IAAD,WACI,cAAC,IAAD,CAAKe,GAAI,EAAT,SACI,cAACb,EAAD,MAGJ,cAAC,IAAD,CAAKa,GAAI,EAAT,SACI,cAACX,EAAD,SAIR,cAAC,IAAD,UACI,cAAC,IAAD,UACI,cAACE,EAAD,a,uGCxThBU,EAAU,Q,0DCMRC,EAAa,SAAAC,GAAG,OAAIA,EAAI,GAAGC,eDLAC,ECKyBF,EDJjDE,EAAOC,QAAQL,GAAS,SAAUM,EAAGC,GAC1C,OAAOA,EAAIJ,kBCGgDK,MAAM,GDLtD,IAAkBJ,GCQlB,SAASK,EAAmBC,GAInC,6DAAJ,GAAI,IAHNC,mBAGM,MAHQV,EAAWS,GAGnB,EAFNE,EAEM,EAFNA,UACAC,EACM,EADNA,aAEMC,EAA2BC,cAAiB,WAK/CC,GAAQ,IAJTzC,EAIS,EAJTA,UACA0C,EAGS,EAHTA,SAGS,IAFTC,GAAIC,OAEK,MAFCP,GAAa,MAEd,EADNQ,EACM,iBACHC,EAAiBC,YAAmBL,EAAUP,GACpD,OAAoBa,cAAKJ,EAAD,aACtBH,IAAKA,EACLzC,UAAWiD,IAAWjD,EAAW8C,IAC9BD,OAKP,OAFAN,EAAYD,aAAeA,EAC3BC,EAAYH,YAAcA,EACnBG,I,2GCzBT,SAASW,EAAcC,GACrB,OAAQA,GAAwB,MAAhBA,EAAKC,OAWvB,IAAMC,EAA0Bb,cAAiB,WAM9CC,GAAQ,QAJTE,GAAIN,OAIK,MAJO,IAIP,EAHTiB,EAGS,EAHTA,SACAC,EAES,EAFTA,UACGV,EACM,iBACHW,EAAc,SAAAC,GAClB,IACEN,EAEEN,EAFFM,KACAO,EACEb,EADFa,SAGEJ,GAAYJ,EAAcC,KAC5BM,EAAME,iBAGJL,EACFG,EAAMG,kBAIG,MAAXF,GAA2BA,EAAQD,IAsBrC,OAZIP,EAAcL,EAAMM,QACtBN,EAAMgB,KAAOhB,EAAMgB,MAAQ,SAG3BhB,EAAMM,KAAON,EAAMM,MAAQ,KAGzBG,IACFT,EAAMiB,UAAY,EAClBjB,EAAM,kBAAmB,GAGPG,cAAKX,EAAD,YAAC,aACvBI,IAAKA,GACFI,GAFmB,IAGtBa,QAASF,EACTD,UAAWQ,aAvBS,SAAAN,GACF,MAAdA,EAAMO,MACRP,EAAME,iBACNH,EAAYC,MAoBkCF,SAGpDF,EAAWjB,YAAc,aACViB,O,iCCnEf,2CA8CeY,IA7BG,SAACpB,GACf,OACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,sBAAK7C,UAAU,iBAAf,UACI,qBAAKA,UAAU,mBAAf,SACI,eAAC,IAAD,CAAYA,UAAU,MAAtB,UACI,cAAC,IAAWkE,KAAZ,CAAiBf,KAAK,IAAtB,mBAECN,EAAM1B,gBAAgBlB,KAAI,SAACkE,EAAMhE,GAC9B,OAAOgE,EAAK7C,OACR,cAAC,IAAW4C,KAAZ,CAAiB5C,QAAM,EAAvB,SACK6C,EAAK/C,OADmBjB,GAI7B,cAAC,IAAW+D,KAAZ,CAA6Bf,KAAMgB,EAAK9C,KAAxC,SACK8C,EAAK/C,OADYjB,WAOtC,oBAAIH,UAAU,aAAd,SAA4B6C,EAAMtB,iB,2ECrCtC,aAAAvB,GAAS,OAAiBwC,cAAiB,SAAC4B,EAAG3B,GAAJ,OAAyBO,cAAK,MAAD,YAAC,eAAYoB,GAAb,IACtF3B,IAAKA,EACLzC,UAAWiD,IAAWmB,EAAEpE,UAAWA,W,iCCLrC,WACMqE,EAAuB7B,gBAAoB,MACjD6B,EAAQjC,YAAc,oBACPiC,O,iCCsBAN,IAhBf,WAAyC,2BAAPO,EAAO,yBAAPA,EAAO,gBACvC,OAAOA,EAAMC,QAAO,SAAAC,GAAC,OAAS,MAALA,KAAWC,QAAO,SAACC,EAAKF,GAC/C,GAAiB,oBAANA,EACT,MAAM,IAAIG,MAAM,2EAGlB,OAAY,OAARD,EAAqBF,EAClB,WAAkC,2BAANI,EAAM,yBAANA,EAAM,gBAEvCF,EAAIG,MAAMC,KAAMF,GAEhBJ,EAAEK,MAAMC,KAAMF,MAEf,Q,uIClBCG,EAAe,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAI/CC,EAAmBxC,cAAiB,WAOvCC,GAAQ,IANTC,EAMS,EANTA,SACA1C,EAKS,EALTA,UACAiF,EAIS,EAJTA,UAIS,IAFTtC,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHqC,EAAoBnC,YAAmBL,EAAU,OACjDyC,EAAa,GAAH,OAAMD,EAAN,SACVE,EAAU,GAiBhB,OAhBAL,EAAaM,SAAQ,SAAAC,GACnB,IAEIC,EAFEC,EAAY3C,EAAMyC,UACjBzC,EAAMyC,GAKTC,EAFa,MAAbC,GAA0C,kBAAdA,EAG1BA,EADFD,KAGKC,EAGT,IAAMC,EAAqB,OAAbH,EAAA,WAAwBA,GAAa,GACvC,MAARC,GAAcH,EAAQM,KAAR,UAAgBP,GAAhB,OAA6BM,EAA7B,YAAsCF,OAEtCvC,cAAKX,EAAD,YAAC,aACvBI,IAAKA,GACFI,GAFmB,IAGtB7C,UAAWiD,IAAU,WAAV,GAAWjD,EAAWkF,EAAmBD,GAAa,cAAtD,OAAuEG,UAGtFJ,EAAI5C,YAAc,MAClB4C,EAAI1C,aArCiB,CACnB2C,WAAW,GAqCED,O,2HCvCTD,EAAe,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAC/CY,EAAmBnD,cACzB,WAKGC,GAAQ,IAJTC,EAIS,EAJTA,SACA1C,EAGS,EAHTA,UAGS,IAFT2C,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHV,EAASY,YAAmBL,EAAU,OACtCkD,EAAQ,GACRR,EAAU,GA4BhB,OA3BAL,EAAaM,SAAQ,SAAAC,GACnB,IAEIO,EACAC,EACAC,EAJEP,EAAY3C,EAAMyC,GAMxB,UALOzC,EAAMyC,GAKY,kBAAdE,GAAuC,MAAbA,EAAmB,OAKlDA,EAHFK,YAFoD,SAGpDC,EAEEN,EAFFM,OACAC,EACEP,EADFO,WAGFF,EAAOL,EAGT,IAAMC,EAAqB,OAAbH,EAAA,WAAwBA,GAAa,GAC/CO,GAAMD,EAAMF,MAAc,IAATG,EAAA,UAAmB1D,GAAnB,OAA4BsD,GAA5B,UAAyCtD,GAAzC,OAAkDsD,EAAlD,YAA2DI,IACnE,MAATE,GAAeX,EAAQM,KAAR,eAAqBD,EAArB,YAA8BM,IACnC,MAAVD,GAAgBV,EAAQM,KAAR,gBAAsBD,EAAtB,YAA+BK,OAGhDF,EAAMI,QACTJ,EAAMF,KAAKvD,GAGOa,cAAKX,EAAD,YAAC,eAAgBQ,GAAjB,IACtBJ,IAAKA,EACLzC,UAAWiD,IAAU,WAAV,GAAWjD,GAAX,OAAyB4F,EAAUR,UAGlDO,EAAIvD,YAAc,MACHuD,O,qMCvCTM,EAA8BzD,cAAiB,WAalDC,GAAQ,IAZTC,EAYS,EAZTA,SACApB,EAWS,EAXTA,OACA4E,EAUS,EAVTA,SACAlG,EASS,EATTA,UASS,IAPT2C,GAAIN,OAOK,MAPO,KAOP,MANT8D,OAAQC,OAMC,MANe/C,IAMf,EALTgD,EAKS,EALTA,UACAlD,EAIS,EAJTA,KACA5B,EAGS,EAHTA,MACA+E,EAES,EAFTA,OACGzD,EACM,iBACHV,EAASY,YAAmBL,EAAU,mBAC5C,OAAoBM,cAAKX,EAAD,YAAC,aACvBI,IAAKA,GACFI,GAFmB,IAGtB7C,UAAWiD,IAAWd,EAAQnC,EAAW,CACvCsB,WAEF,eAAgBA,EAAS,YAASiF,EAClCL,SAAU5E,EAAS4E,EAAwBlD,cAAKoD,EAAD,YAAC,eAAoBC,GAArB,IAC7ClD,KAAMA,EACN5B,MAAOA,EACP+E,OAAQA,EACRJ,SAAUA,WAIhBD,EAAe7D,YAAc,iBAC7B6D,EAAe3D,aAnCM,CACnBhB,QAAQ,EACR+E,UAAW,IAkCEJ,Q,+DChCTO,EAA0BhE,cAAiB,WAS9CC,GAAQ,IARTC,EAQS,EARTA,SACA1C,EAOS,EAPTA,UACAyG,EAMS,EANTA,UACAP,EAKS,EALTA,SACA9E,EAIS,EAJTA,MAIS,IAFTuB,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHV,EAASY,YAAmBL,EAAU,cAC5C,OAAoBM,cAAKX,EAAD,YAAC,aACvB,aAAcjB,EACdpB,UAAWA,EACXyC,IAAKA,GACFI,GAJmB,IAKtBqD,SAAuBlD,cAAK,KAAD,YAAC,eAAWyD,GAAZ,IACzBzG,UAAWiD,IAAWd,EAAqB,MAAbsE,OAAoB,EAASA,EAAUzG,WACrEkG,SAAUA,WAIhBM,EAAWpE,YAAc,aACzBoE,EAAWlE,aA3BU,CACnBlB,MAAO,aACPqF,UAAW,IA0BEC,WAAOC,OAAOH,EAAY,CACvCtC,KAAM+B,K,uJC9BFW,EAAuBpE,cAC7B,WAMGC,GAAQ,IALTC,EAKS,EALTA,SACA1C,EAIS,EAJTA,UACAM,EAGS,EAHTA,QAGS,IAFTqC,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHV,EAASY,YAAmBL,EAAU,YAC5C,OAAoBM,cAAKX,EAAD,aACtBI,IAAKA,EACLzC,UAAWiD,IAAW3C,EAAU,GAAH,OAAM6B,EAAN,YAAgB7B,GAAY6B,EAAQnC,IAC9D6C,OAGP+D,EAAQxE,YAAc,UACPwE,Q,yCCdTC,EAA0BrE,cAAiB,WAM9CC,GAAQ,IALTC,EAKS,EALTA,SACA1C,EAIS,EAJTA,UAIS,IAFT2C,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHV,EAASY,YAAmBL,EAAU,eACtCoE,EAAeC,mBAAQ,iBAAO,CAClCC,mBAAoB7E,KAClB,CAACA,IACL,OAAoBa,cAAKiE,IAAkBC,SAAU,CACnDC,MAAOL,EACPZ,SAAuBlD,cAAKX,EAAD,YAAC,aAC1BI,IAAKA,GACFI,GAFsB,IAGzB7C,UAAWiD,IAAWjD,EAAWmC,WAIvC0E,EAAWzE,YAAc,aACVyE,Q,uECnBTO,EAAgBC,YAAiB,MACjCC,EAAgBD,YAAiB,MACjCE,EAAWrF,YAAmB,aAC9BsF,EAAYtF,YAAmB,aAAc,CACjDG,UAAW+E,IAEPK,EAAevF,YAAmB,gBAAiB,CACvDG,UAAWiF,IAEPI,EAAWxF,YAAmB,YAAa,CAC/CG,UAAW,MAEPsF,EAAWzF,YAAmB,YAAa,CAC/CG,UAAW,MAEPuF,EAAa1F,YAAmB,eAChC2F,EAAiB3F,YAAmB,oBAIpC4F,EAAoBtF,cAAiB,WAWxCC,GAAQ,IAVTC,EAUS,EAVTA,SACA1C,EASS,EATTA,UACA+H,EAQS,EARTA,GACAC,EAOS,EAPTA,KACAC,EAMS,EANTA,OACAC,EAKS,EALTA,KACAhC,EAIS,EAJTA,SAIS,IAFTvD,GAAIN,OAEK,MAFO,MAEP,EADNQ,EACM,iBACHV,EAASY,YAAmBL,EAAU,QAC5C,OAAoBM,cAAKX,EAAD,YAAC,aACvBI,IAAKA,GACFI,GAFmB,IAGtB7C,UAAWiD,IAAWjD,EAAWmC,EAAQ4F,GAAM,MAAJ,OAAUA,GAAMC,GAAQ,QAAJ,OAAYA,GAAQC,GAAU,UAAJ,OAAcA,IACvG/B,SAAUgC,EAAoBlF,cAAKuE,EAAU,CAC3CrB,SAAUA,IACPA,QAGT4B,EAAK1F,YAAc,OACnB0F,EAAKxF,aA1BgB,CACnB4F,MAAM,GA0BOxB,WAAOC,OAAOmB,EAAM,CACjCK,IAAKvB,EACLwB,MAAOZ,EACPa,SAAUZ,EACV1H,KAAMwH,EACNe,KAAMZ,EACNa,KAAMZ,EACNa,OAAQ3B,EACR4B,OAAQb,EACRc,WAAYb,K,8LCzDRc,EAAqBnG,cAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACA1C,EASS,EATTA,UACAQ,EAQS,EARTA,QACAE,EAOS,EAPTA,SACAkI,EAMS,EANTA,WACAhI,EAKS,EALTA,MACAE,EAIS,EAJTA,KACAR,EAGS,EAHTA,QACAU,EAES,EAFTA,WACG6B,EACM,iBACHqC,EAAoBnC,YAAmBL,EAAU,SACjD0C,EAAUnC,IAAWjD,EAAWkF,EAAmB5E,GAAW,GAAJ,OAAO4E,EAAP,YAA4B5E,GAAWQ,GAAQ,GAAJ,OAAOoE,EAAP,YAA4BpE,GAAQN,GAAW,GAAJ,OAAO0E,EAAP,YAAoCxE,GAAY,GAAJ,OAAOwE,EAAP,aAAqC0D,GAAc,GAAJ,OAAO1D,EAAP,eAAuCtE,GAAS,GAAJ,OAAOsE,EAAP,WAEvR2D,EAAqB7F,cAAK,QAAD,YAAC,eAAcH,GAAf,IAC7B7C,UAAWoF,EACX3C,IAAKA,KAGP,GAAIzB,EAAY,CACd,IAAI8H,EAAkB,GAAH,OAAM5D,EAAN,eAMnB,MAJ0B,kBAAflE,IACT8H,EAAkB,GAAH,OAAMA,EAAN,YAAyB9H,IAGtBgC,cAAK,MAAO,CAC9BhD,UAAW8I,EACX5C,SAAU2C,IAId,OAAOA,KAEMF","file":"static/js/82.cb34de4d.chunk.js","sourcesContent":["// @flow\nimport React from 'react';\nimport { Row, Col, Card, Table } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\n// dummy records\nconst records = [\n    { id: 1, firstName: 'Mark', lastName: 'Otto', username: '@mdo' },\n    { id: 2, firstName: 'Jacob', lastName: 'Thornton', username: '@fat' },\n    { id: 3, firstName: 'Dave', lastName: 'G', username: '@dave' },\n    { id: 4, firstName: 'Nik', lastName: 'N', username: '@nikn' },\n    { id: 5, firstName: 'Shreyu', lastName: 'Navadiya', username: '@sn' },\n];\n\nconst BasicTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Basic example</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Just use <code>Table</code> element\n                </p>\n\n                <Table className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InverseTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Inverse Table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    You can also invert the colors—with light text on dark backgrounds—by specifying <code>dark</code>{' '}\n                    attribute\n                </p>\n\n                <Table className=\"mb-0\" variant=\"dark\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst StripedRowsTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Striped Rows</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>striped</code> attribute to table\n                </p>\n\n                <Table className=\"mb-0\" striped>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst BorderedTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Bordered table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>bordered</code> attribute for borders on all sides of the table and cells.\n                </p>\n\n                <Table className=\"mb-0\" bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst HoverableTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Hoverable Rows</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>hover</code> attribute to enable a hover state on table rows\n                </p>\n\n                <Table className=\"mb-0\" hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst SmallTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Small table</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Add <code>size=\"sm\"</code> attribute to make tables more compact by cutting cell padding in half\n                </p>\n\n                <Table className=\"mb-0\" size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst ResponsiveTable = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Always responsive</h4>\n                <p className=\"text-muted font-14 mb-4\">\n                    Across every breakpoint, use <code>responsive</code> attribute to create responsive tables\n                </p>\n\n                <Table className=\"mb-0\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst Tables = (): React$Element<React$FragmentType> => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Tables', path: '/ui/tables/basic' },\n                    { label: 'Basic Tables', path: '/ui/tables/basic', active: true },\n                ]}\n                title={'Basic Tables'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <BasicTable />\n                </Col>\n\n                <Col xl={6}>\n                    <InverseTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StripedRowsTable />\n                </Col>\n\n                <Col xl={6}>\n                    <BorderedTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <HoverableTable />\n                </Col>\n\n                <Col xl={6}>\n                    <SmallTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <ResponsiveTable />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Tables;\n","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import * as React from 'react';\nimport createChainedFunction from './createChainedFunction';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * There are situations due to browser quirks or Bootstrap CSS where\n * an anchor tag is needed, when semantically a button tag is the\n * better choice. SafeAnchor ensures that when an anchor is used like a\n * button its accessible. It also emulates input `disabled` behavior for\n * links, which is usually desirable for Buttons, NavItems, DropdownItems, etc.\n */\n\n\nconst SafeAnchor = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'a',\n  disabled,\n  onKeyDown,\n  ...props\n}, ref) => {\n  const handleClick = event => {\n    const {\n      href,\n      onClick\n    } = props;\n\n    if (disabled || isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  if (isTrivialHref(props.href)) {\n    props.role = props.role || 'button'; // we want to make sure there is a href attribute on the node\n    // otherwise, the cursor incorrectly styled (except with role='button')\n\n    props.href = props.href || '#';\n  }\n\n  if (disabled) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  }\n\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    onClick: handleClick,\n    onKeyDown: createChainedFunction(handleKeyDown, onKeyDown)\n  });\n});\nSafeAnchor.displayName = 'SafeAnchor';\nexport default SafeAnchor;","// @flow\nimport React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ntype BreadcrumbItems = {\n    label: string,\n    path: string,\n    active?: boolean,\n};\n\ntype PageTitleProps = {\n    breadCrumbItems: Array<BreadcrumbItems>,\n    title: string,\n};\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps): React$Element<any> => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <div className=\"page-title-right\">\n                        <Breadcrumb className=\"m-0\">\n                            <Breadcrumb.Item href=\"/\">Hyper</Breadcrumb.Item>\n\n                            {props.breadCrumbItems.map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                    <h4 className=\"page-title\">{props.title}</h4>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", { ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));","import * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args); // @ts-ignore\n\n      f.apply(this, args);\n    };\n  }, null);\n}\n\nexport default createChainedFunction;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst defaultProps = {\n  noGutters: false\n};\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  noGutters,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, noGutters && 'no-gutters', ...classes)\n  });\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span = true,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${prefix}${infix}` : `${prefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, ...spans, ...classes)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport SafeAnchor from './SafeAnchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = SafeAnchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardImg from './CardImg';\nimport CardHeader from './CardHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardBody = createWithBsPrefix('card-body');\nconst CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nconst CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nconst CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nconst CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nconst CardFooter = createWithBsPrefix('card-footer');\nconst CardImgOverlay = createWithBsPrefix('card-img-overlay');\nconst defaultProps = {\n  body: false\n};\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;"],"sourceRoot":""}